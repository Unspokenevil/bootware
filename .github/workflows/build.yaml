# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: build

# Trigger workflow on any push or pull request.
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  lint:
    name: Check code with formatter and linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Node interpreter
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Cache Node packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: >-
            node-16_${{ runner.os }}_npm-${{ hashFiles('package-lock.json') }}
      - name: Install Node packages
        run: npm install
      - name: Check format of configuration files
        run: npm run prettier:test
      - name: Install Shfmt
        run: |
          shfmt_version="$(curl -LSfs "https://api.github.com/repos/mvdan/sh/releases/latest" | jq -r .tag_name)"
          sudo curl -LSfs "https://github.com/mvdan/sh/releases/download/${shfmt_version}/shfmt_${shfmt_version}_linux_amd64" -o "/usr/local/bin/shfmt"
          sudo chmod 755 "/usr/local/bin/shfmt"
      - name: Check format of shell scripts
        run: npm run shfmt:test
      - name: Run ShellCheck on shell scripts
        uses: ludeeus/action-shellcheck@master
        with:
          additional_files: .bash_profile .bashrc '*.bats'
          ignore: node_modules
          severity: style
      # Avoid the APT ansible-lint package which has the completely broken 4.2.0
      # version due to https://github.com/ansible-community/ansible-lint/issues/892 bug.
      - name: Install Ansible and Ansible Lint
        run: |
          python -m pip install ansible "ansible-lint>=4.3.5"
      - name: Lint Ansible playbook and roles
        run: |
          ansible-lint --version
          ansible-lint main.yaml

  test-bash:
    name: Run unit tests for Bash scripts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Node interpreter
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Cache Node packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: >-
            node-16_${{ runner.os }}_npm-${{ hashFiles('package-lock.json') }}
      - name: Install Node packages
        run: npm install
      - name: Run Bash unit tests with Bats
        run: npm run bats:test

  test-package:
    name: Test building a ${{ matrix.format }} package
    strategy:
      fail-fast: false
      matrix:
        format: [deb]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./tests/integration/${{ matrix.format }}.Dockerfile
          tags: bootware:${{ matrix.format }}
          push: false

  test-powershell:
    name: Run linter and unit tests for PowerShell scripts
    runs-on: windows-2019
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install PSScriptAnalyzer
        run: Install-Module -Force -Name PSScriptAnalyzer
        shell: pwsh
      - name: Run PSScriptAnalyzer format lints on all PowerShell scripts
        run: Invoke-ScriptAnalyzer -Recurse -Path . -Settings CodeFormatting
        shell: pwsh
      - name: Install Pester
        run: Install-Module -Force -Name Pester
        shell: pwsh
      - name: Run PowerShell unit tests with Pester
        run: Invoke-Pester -Output Detailed ./tests/unit/
        shell: pwsh

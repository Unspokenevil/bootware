# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: test

# Makes workflow run on push or pull request to the main branch.
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug:
        default: false
        description: Use Tmate session for debugging
        type: boolean
      job:
        default: debian
        description: CI job to run
        options:
          - alpine
          - arch
          - collection
          - debian
          - fedora
          - freebsd
          - macos
          - suse
          - ubuntu
          - windows
        type: choice
      platform:
        default: amd64
        description: Docker architecture platform
        options:
          - amd64
          - arm64
        type: choice

jobs:
  alpine:
    name: Test bootstrapping software for Alpine Linux
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'alpine' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: test=true
          context: .
          file: ./tests/integration/alpine.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:alpine
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  arch:
    name: Test bootstrapping software for Arch Linux
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job ==  'arch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: test=true
          context: .
          file: ./tests/integration/arch.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:arch
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  collection:
    name: Test Bootware collection on Debian
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'collection'
      }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./tests/integration/collection.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:collection
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  debian:
    name: Test bootstrapping software for Debian Linux
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'debian' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: test=true
          context: .
          file: ./tests/integration/debian.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:debian
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  fedora:
    name: Test bootstrapping software for Fedora Linux
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'fedora' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: test=true
          context: .
          file: ./tests/integration/fedora.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:fedora
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  freebsd:
    name: Test bootstrapping software for FreeBSD
    # Removed from default test suite until
    # https://github.com/vmactions/freebsd-vm supports MacOS and CPU
    # acceleration again to avoid action timeouts.
    if: >-
      ${{ github.event_name == 'workflow_dispatch' || inputs.job == 'freebsd' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Test installation, setup, and bootstrapping
        uses: vmactions/freebsd-vm@v1
        with:
          prepare: |
            sudo freebsd-update fetch
            sudo freebsd-update install
            pkg install --yes bash curl
          release: "13.2"
          # Termshark is installed at /usr/local/bin/termshark on
          # FreeBSD in the job's VM, which is in the system path. No idea why
          # the test suite cannot find it.
          #
          # As of 08/22/2023, checks for Libvirt, QEMU, and Wireshark are
          # failing due to a temporary undefined symbol issue with
          # /usr/local/lib/libtasn1.so.6.
          run: |
            set -eou pipefail
            ./install.sh
            ./bootware.sh setup
            ./bootware.sh bootstrap --dev --no-passwd --retries 3 --tags desktop,extras
            bash -c 'source $HOME/.bashrc && ./tests/integration/roles_test.ts --arch amd64 --skip libvirt,qemu,termshark,wireshark freebsd'
          usesh: true
      # To login into the FreeBSD VM from the MacOS runner, execute `ssh -t
      # freebsd` and `cd /root/work/bootware/bootware`.
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  macos:
    name: Test bootstrapping software for MacOS
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'macos' }}
    runs-on: macos-12
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install Bootware
        run: |
          ./install.sh
          sudo cp bootware.sh $(which bootware)
      # Brew installation causes ModuleNotFound ansible.plugins.filter errors.
      - name: >-
          Install Ansible with Python since Brew installation appears to be
          broken
        run: python3 -m pip install ansible
      - name: Install dependencies for Bootware
        run: bootware setup
      # Github actions MacOS VM has issues where the first homebrew upgrade
      # often fails with kmutil virtualization errors.
      - name: Initialize Brew to avoid weird GitHub actions error
        continue-on-error: true
        run: bootware bootstrap --dev --no-passwd --tags update
      # Bats is already installed with NPM and causes a conflict. Docker is not
      # installable on the GitHub MacOS VM.
      - name: Test bootstrapping
        run: >-
          bootware bootstrap --dev --no-passwd --retries 3 --skip bats,docker
          --tags desktop,extras
      # Ruby Tilt is already installed and the VM's shell is configured to point
      # to the Ruby executable even after it is removed and another Tilt
      # exectuable is installed. Since Docker is not installable, the Docker
      # Compose check will fail.
      - name: Test installed binaries for roles
        run: |
          source ${HOME}/.bashrc
          node tests/integration/roles.spec.js --arch amd64 --skip bats,docker,docker_compose,tilt macos
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  suse:
    name: Test bootstrapping software for Suse Linux
    if: >-
      ${{ github.event_name == 'workflow_dispatch' && inputs.job ==  'suse' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: test=true
          context: .
          file: ./tests/integration/suse.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:suse
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  ubuntu:
    name: Test bootstrapping software for Ubuntu Linux
    if: >-
      ${{ github.event_name == 'workflow_dispatch' && inputs.job == 'ubuntu' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: test=true
          context: .
          file: ./tests/integration/ubuntu.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:ubuntu
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  windows:
    name: Test bootstrapping software for Windows
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'windows' }}
    runs-on: windows-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - uses: Vampire/setup-wsl@v2
        with:
          distribution: Debian
          set-as-default: "true"
      # Variable ${{ github.ref_name }} does not replace this step, since
      # ref_name will be name of the pull request instead of the branch.
      - name: Get current branch
        id: branch
        uses: tj-actions/branch-names@v7
      - name: Install Bootware
        run: |
          ./install.ps1 --version ${{ steps.branch.outputs.current_branch }}
          Copy-Item "./bootware.ps1" -Destination "C:/Program Files/Bootware/bootware.ps1"
        shell: powershell
      # The GitHub Windows server does not seem to update its path correctly.
      # Appears to work on other Windows servers.
      - name: Install dependencies for Bootware
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware setup --checkout ${{ steps.branch.outputs.current_branch }}
        shell: powershell
      - name: Log all firewall rules on Windows host
        run: Get-NetFirewallRule -All
        shell: powershell
      # IdentitiesOnly is required to avoid an infinite wait for user password
      # input if the private key is rejected. Localhost is used since
      # Vampire/setup-wsl@v2 sets up WSL version 1.
      - name: Test SSH connection from WSL to Windows host
        run: >-
          wsl ssh -vvv -i '$HOME/.ssh/bootware' -o IdentitiesOnly=yes -o
          StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          $Env:UserName@127.0.0.1 dir
        shell: powershell
      - name: Copy Bootware configuration file
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware config --empty
        shell: powershell
      # GitLab runner and 2022 Visual Studio packages are failing during
      # installation.
      - name: Test bootstrapping
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware bootstrap --no-setup --retries 3 --skip build,gitlab --tags desktop,extras
        shell: powershell
      # The GitHub Windows server does not seem to update its path correctly.
      # Appears to work on other Windows servers.
      - name: Test installed binaries for roles
        run: |
          $Env:Path = "C:\Program Files\Datree;C:\Program Files\Kubeshark;$HOME\.krew\bin;$HOME\scoop\shims;$Env:LocalAppData\Programs\mongosh;$Env:Path"
          node tests/integration/roles.spec.js --arch amd64 --skip gitlab windows
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

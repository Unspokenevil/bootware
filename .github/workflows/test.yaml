# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: test

# Makes workflow run on push or pull request to the main branch.
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug:
        default: false
        description: Use Tmate session for debugging
        type: boolean
      job:
        description: CI job to run
        options:
          - alpine
          - arch
          - debian
          - fedora
          - freebsd
          - macos
          - ubuntu
          - windows
        required: true
        type: choice
      platform:
        default: amd64
        description: Docker architecture platform
        options:
          - amd64
          - arm64
        type: choice

jobs:
  alpine:
    name: Test bootstrapping software for Alpine Linux
    env:
      DOCKER_BUILD_SUMMARY: "false"
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'alpine' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # GDU role is skipped since the Alpine package is broken as of
        # 08/29/2025. Helix role is skipped since the
        # https://github.com/zydou/helix repository for MUSL builds is behind
        # the upstream repository as 07/18/2025.
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            skip=android_studio,gdu,helix
            test=true
          context: .
          file: test/e2e/alpine.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:alpine
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  arch:
    name: Test bootstrapping software for Arch Linux
    env:
      DOCKER_BUILD_SUMMARY: "false"
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job ==  'arch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          # Libvirt test fails in GitHub workflow as of 01/18/2025 due to a "No
          # module named 'gi'" Python error. The test passes when run locally.
          build-args: |
            skip=android_studio,libvirt
            test=true
          context: .
          file: test/e2e/arch.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:arch
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  debian:
    name: Test bootstrapping software for Debian Linux
    env:
      DOCKER_BUILD_SUMMARY: "false"
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'debian' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: test=true
          context: .
          file: test/e2e/debian.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:debian
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  fedora:
    name: Test bootstrapping software for Fedora Linux
    env:
      DOCKER_BUILD_SUMMARY: "false"
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'fedora' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: >-
          docker build --no-cache --build-arg test=true --file
          test/e2e/fedora.dockerfile --tag docker.io/scruffaluff/bootware:fedora
          --platform linux/${{ inputs.platform || 'amd64' }} .
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  # FreeBSD test is disabled as of 08/01/2025 since FreeBSD 14.3 is too slow.
  freebsd:
    name: Test bootstrapping software for FreeBSD
    if: >-
      ${{ github.event_name == 'workflow_dispatch' && inputs.job == 'freebsd' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Test installation, setup, and bootstrapping
        env:
          BOOTWARE_GITHUB_TOKEN: ${{ github.token }}
        uses: vmactions/freebsd-vm@v1
        with:
          envs: BOOTWARE_GITHUB_TOKEN
          prepare: |
            pkg update -f
            pkg install --yes curl
          release: "14.3"
          # Gdu is skipped as 07/20/2025 it is not available in FreeBSD 14.3
          # yet. Node is skipped since Mermaid CLI fails during installation as
          # of 07/20/2025. Security role is skipped since it breaks the
          # freebsd-vm action's Rsync connection by enforcing stricter SSH
          # rules. Audacity and Musescore tests are skipped in FreeBSD VM since
          # they require a display connection. VLibvirt and QEMU tests are
          # skipped since the packages are broken on FreeBSD 14.3 as of
          # 07/20/2025. LC test is skipped since it cannot run as root.
          run: |
            set -eu
            src/install.sh --global
            install src/bootware.sh $(which bootware)
            bootware setup
            bootware bootstrap --dev --no-passwd --retries 3 --skip gdu,node,security --tags all,never
            bash -c 'source $HOME/.bashrc && test/e2e/roles.test.ts --arch amd64 --skip audacity,gdu,libvirt,musescore,node,qemu,vlc freebsd'
          usesh: true
      # To login into the FreeBSD VM from the MacOS runner, execute `ssh -t
      # freebsd` and `cd /root/work/bootware/bootware`.
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  macos:
    name: Test bootstrapping software for MacOS
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'macos' }}
    runs-on: macos-latest
    steps:
      - name: Free disk space
        run: rm -fr "${HOME}/Library/Android" "${HOME}/Library/Developer"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Bootware
        run: |
          src/install.sh --global
          sudo install src/bootware.sh $(which bootware)
      - name: Install dependencies for Bootware
        run: bootware setup
      - name: Test bootstrapping
        env:
          BOOTWARE_GITHUB_TOKEN: ${{ github.token }}
        run: >-
          bootware bootstrap --dev --no-passwd --retries 3 --tags all,never
      - name: Test installed binaries for roles
        run: |
          source ${HOME}/.bashrc
          test/e2e/roles.test.ts --arch arm64 macos
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  ubuntu:
    name: Test Bootware collection on Ubuntu Linux
    env:
      DOCKER_BUILD_SUMMARY: "false"
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'ubuntu' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: test=true
          context: .
          file: test/e2e/ubuntu.dockerfile
          platforms: linux/${{ inputs.platform || 'amd64' }}
          push: false
          tags: docker.io/scruffaluff/bootware:ubuntu
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  windows:
    name: Test bootstrapping software for Windows
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job == 'windows' }}
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: Vampire/setup-wsl@v3
        with:
          # Setup WSL uses the version 11 for Debian which has an out of date
          # version of Ansible.
          distribution: Ubuntu-24.04
          set-as-default: "true"
      # Variable ${{ github.ref_name }} does not replace this step, since
      # ref_name will be name of the pull request instead of the branch.
      - name: Get current branch
        id: branch
        uses: tj-actions/branch-names@v8
      - name: Install Bootware
        run: |
          src\install.ps1 --global --version ${{ steps.branch.outputs.current_branch }}
          Copy-Item -Destination 'C:\Program Files\Bootware\bootware.ps1' -Path src/bootware.ps1
        shell: powershell
      # The GitHub Windows server does not seem to update its path correctly.
      # Appears to work on other Windows servers. Default shell must be older
      # version of PowerShell only GitHub hosted Windows runner to prevent
      # "xml.etree.ElementTree.ParseError" errors during Bootware PowerShell
      # role.
      - name: Install dependencies for Bootware
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware setup --checkout ${{ steps.branch.outputs.current_branch }}
          New-ItemProperty `
            -Force `
            -Name DefaultShell `
            -Path 'HKLM:\SOFTWARE\OpenSSH' `
            -PropertyType String `
            -Value 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'
        shell: powershell
      - name: Log all firewall rules on Windows host
        run: Get-NetFirewallRule -All
        shell: powershell
      # IdentitiesOnly is required to avoid an infinite wait for user password
      # input if the private key is rejected. Localhost is used since
      # Vampire/setup-wsl@v2 sets up WSL version 1.
      - name: Test SSH connection from WSL to Windows host
        run: >-
          wsl ssh -vvv -i '$HOME/.ssh/bootware' -o IdentitiesOnly=yes -o
          StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          $Env:UserName@127.0.0.1 dir
        shell: powershell
      - name: Copy Bootware configuration file
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware config --empty
        shell: powershell
      # Docker role is skipped since it is already installed. VSCodium role is
      # skipped as of 08/22/2025 since it fails to install extensions.
      - name: Test bootstrapping
        env:
          BOOTWARE_GITHUB_TOKEN: ${{ github.token }}
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware bootstrap --dev --no-setup --retries 3 --skip docker,vscodium --tags all,never
        shell: powershell
      # The GitHub Windows server does not seem to update its path correctly.
      # Appears to work on other Windows servers. LLDB test is skipped since it
      # is already installed on Github hosted runner and is broken. Rust tests
      # is skipped since a second and incorrect Rust Analyzer binary is
      # sometimes created after the Rust role completes.
      - name: Test installed binaries for roles
        run: |
          $Env:Path = "C:\Program Files\Kubeshark;C:\Program Files\Microsoft VS Code\bin;$Env:Path"
          $Env:Path = "C:\Program Files\Datree;C:\Program Files\Deno\bin;$Env:Path"
          $Env:Path = "C:\ProgramData\scoop\shims;$HOME\.krew\bin;$HOME\scoop\shims;$Env:Path"
          $Env:Path = "$HOME\scoop\apps\qemu\current;$Env:LocalAppData\Programs\mongosh;$Env:Path"
          deno run --allow-read --allow-run test/e2e/roles.test.ts --arch amd64 --skip docker,lldb,rust,vscodium windows
      - if: ${{ always() && inputs.debug }}
        name: Launch Tmate session if debug enabled
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

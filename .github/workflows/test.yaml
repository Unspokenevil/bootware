# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: test

# Trigger workflow on push or pull request to the develop, main, and master
# branches.
on:
  pull_request:
    branches:
      - develop
      - main
      - master
  push:
    branches:
      - develop
      - main
      - master
  workflow_dispatch:
    inputs:
      debug:
        default: "false"
        description: "Use TMate session for debugging on failure"
        required: false
      os:
        default: alpine arch debian fedora freebsd macos ubuntu windows
        description: Space separated list of operating systems
        required: false

jobs:
  # Node is currently broken for FreeBSD. For more information, visit
  # https://github.com/nodejs/node/issues/40467#issuecomment-946902776.
  test-freebsd:
    name: Test bootstrapping software for FreeBSD
    if: >-
      ${{ github.event_name != 'workflow_dispatch' ||
      contains(github.event.inputs.os, 'freebsd') }}
    # MacOS version 10.15 is required by vmactions/freebsd-vm.
    runs-on: macos-10.15
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Test installation, setup, and bootstrapping
        uses: vmactions/freebsd-vm@v0.1.5
        with:
          prepare: pkg install -y bash curl
          run: |
            sudo freebsd-update fetch
            sudo freebsd-update install
            curl -LSfs https://raw.githubusercontent.com/scruffaluff/bootware/master/install.sh | bash
            bootware setup
            bootware bootstrap --dev --no-passwd
            ./tests/integration/roles_test.ts --arch amd64 freebsd
      - name: Setup tmate session if job failed
        if: >-
          ${{ failure() && github.event_name == 'workflow_dispatch' &&
          github.event.inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  # test-linux:
  #   name: >-
  #     Test bootstrapping software for ${{ matrix.arch }} ${{ matrix.distro }}
  #   strategy:
  #     fail-fast: false
  #     # Arm64 tests are currently removed since they cannot complete within
  #     # GitHub's job limit of 6 hours.
  #     matrix:
  #       arch: ["amd64"]
  #       distro: [alpine, arch, debian, fedora, ubuntu]
  #       include:
  #         # Google Cloud SDK is broken on Alpine. It always throws "ImportError:
  #         # Error loading shared library ld-linux-x86-64.so.2".
  #         - arch: amd64
  #           os: alpine
  #           skip: gcp
  #         # Alacritty terminal is only installable on Ubuntu via deb package
  #         # from MMStick PPA,
  #         # https://launchpad.net/~mmstick76/+archive/ubuntu/alacritty. The PPA
  #         # has not provided a 22.04 release as of 06/14/2022.
  #         - arch: amd64
  #           os: ubuntu
  #           skip: alacritty
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code repository
  #       uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Build Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         build-args: |
  #           skip=${{ matrix.skip || 'none' }}
  #           test=true
  #         context: .
  #         file: ./tests/integration/${{ matrix.distro }}.Dockerfile
  #         platforms: linux/${{ matrix.arch }}
  #         push: false
  #         tags: scruffaluff/bootware:${{ matrix.distro }}-latest

  test-macos:
    name: Test bootstrapping software for MacOS
    if: >-
      ${{ github.event_name != 'workflow_dispatch' ||
      contains(github.event.inputs.os, 'macos') }}
    runs-on: macos-12
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Bootware
        run: >
          curl -LSfs
          https://raw.githubusercontent.com/scruffaluff/bootware/master/install.sh
          | bash
      # Brew installation causes ModuleNotFound ansible.plugins.filter errors.
      - name: >-
          Install Ansible with Python since Brew installation appears to be
          broken
        run: python3 -m pip install ansible
      - name: Install dependencies for Bootware
        run: bootware setup
      # Bats is already installed with NPM and causes a conflict.
      - name: Test bootstrapping
        run: bootware bootstrap --dev --no-passwd --skip bats,docker
      # Ruby Tilt is already installed and the VM's shell is configured to point
      # to the Ruby executable even after it is removed and another Tilt
      # exectuable is installed.
      - name: Test installed binaries for roles
        run: |
          source ${HOME}/.bashrc
          node tests/integration/roles.spec.js --arch amd64 --skip docker,tilt macos
      - name: Setup tmate session if job failed
        if: >-
          ${{ failure() && github.event_name == 'workflow_dispatch' &&
          github.event.inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  test-windows:
    name: Test bootstrapping software for Windows
    if: >-
      ${{ github.event_name != 'workflow_dispatch' ||
      contains(github.event.inputs.os, 'windows') }}
    # Vampire/setup-wsl does not yet support windows-2022.
    runs-on: windows-2019
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Get current branch
        id: branch
        uses: tj-actions/branch-names@v4
      - uses: Vampire/setup-wsl@v1
        with:
          distribution: Ubuntu-20.04
          set-as-default: "true"
      - name: Install Bootware
        run: |
          ./install.ps1
          Copy-Item "./bootware.ps1" -Destination "C:/Program Files/Bootware/bootware.ps1"
        shell: powershell
      # The GitHub Windows server does not seem to update its path correctly.
      # Appears to work on other Windows servers.
      - name: Install dependencies for Bootware
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware setup --checkout ${{ steps.branch.outputs.current_branch }}
        shell: powershell
      - name: Log all firewall rules on Windows host
        run: Get-NetFirewallRule -All
        shell: powershell
      # IdentitiesOnly is required to avoid an infinite wait for user password
      # input if the private key is rejected.
      - name: Test SSH connection from WSL to Windows host
        run: >-
          wsl ssh -vvv -i '$HOME/.ssh/bootware' -o IdentitiesOnly=yes -o
          StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          $Env:UserName@127.0.0.1 dir
        shell: powershell
      - name: Copy Bootware configuration file
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware config --empty
        shell: powershell
      # Windows Terminal is too early of a version to be supported on the GitHub
      # server. Go package installer syntax is currently outdated on GitHub
      # server. GitLab runner is failing Soop installation due to a hash
      # mismatch. TODO: Turn back on gitlab tag in a few weeks.
      - name: Test bootstrapping
        run: |
          $Env:Path = "C:\Program Files\Bootware;$Env:Path"
          bootware bootstrap --no-setup --skip defterm,deskenv
        shell: powershell
      # The GitHub Windows server does not seem to update its path correctly.
      # Appears to work on other Windows servers.
      - name: Test installed binaries for roles
        run: |
          $Env:Path = "$HOME\scoop\shims;$Env:Path"
          node tests/integration/roles.spec.js --arch amd64 windows
      - name: Setup tmate session if job failed
        if: >-
          ${{ failure() && github.event_name == 'workflow_dispatch' &&
          github.event.inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

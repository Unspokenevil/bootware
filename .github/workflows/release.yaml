# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

name: release

# Make workflow run only for pushed SemVer compatible tags.
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    name: Get Git tag and make GitHub release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Extract tag
        id: extract_tag
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Node dependencies
        run: npm install
      - name: Get version changes
        id: version_changes
        run: |
          changes=$(node scripts/print_changes.js ${{ steps.extract_tag.outputs.tag }})
          echo "::set-output name=change_log::$changes"
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.version_changes.outputs.change_log }}

  image:
    name: Create and push Docker image
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: "."
          file: ./Dockerfile
          push: true
          tags: |
            wolfgangwazzlestrauss/bootware:latest
            wolfgangwazzlestrauss/bootware:${{ needs.release.outputs.tag }}

  package:
    name: Create and upload ${{ matrix.package }} package
    strategy:
      fail-fast: false
      matrix:
        package: [deb]
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Node dependencies
        run: npm install
      - name: Build package
        id: build_package
        run: |
          package_path=$(node scripts/build_package.js ${{ matrix.package }} ${{ needs.release.outputs.tag }})
          package_name=$(basename $package_path)
          echo "::set-output name=package_name::$package_name"
          echo "::set-output name=package_path::$package_path"
      - name: Upload release archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.build_package.outputs.package_path }}
          asset_name: ${{ steps.build_package.outputs.package_name }}
          asset_content_type: application/octet-stream

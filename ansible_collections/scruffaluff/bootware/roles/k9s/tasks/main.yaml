---
- name: Install K9s for FreeBSD
  become: true
  community.general.pkgng:
    name: k9s
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Install K9s for Linux
  ansible.builtin.package:
    name: k9s
  become: true
  ignore_errors: true
  register: k9s_linux
  tags:
    - install
  when: ansible_system == "Linux"

- name: Get latest K9s version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/k9s.json
  register: k9s_formula
  tags:
    - install
  when: ansible_system == "Linux" and k9s_linux is failed

- name: Create K9s temporary directory for Linux
  ansible.builtin.tempfile:
    state: directory
  register: k9s_temp
  tags:
    - install
  when: ansible_system == "Linux" and k9s_linux is failed

- name: Set K9s temporary directory permissions for Linux
  ansible.builtin.file:
    mode: "755"
    path: "{{ k9s_temp.path }}"
    state: directory
  tags:
    - install
  when: ansible_system == "Linux" and k9s_linux is failed

- name: Download K9s for Linux
  ansible.builtin.unarchive:
    dest: "{{ k9s_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/derailed/k9s/releases/download/v{{
      k9s_formula.json.versions.stable }}/k9s_Linux_{{ system_architecture
      }}.tar.gz
  tags:
    - install
  when: ansible_system == "Linux" and k9s_linux is failed

- name: Install K9s for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/k9s
    force: true
    mode: "755"
    remote_src: true
    src: "{{ k9s_temp.path }}/k9s"
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and k9s_linux is failed

- name: Install K9s for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: k9s
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install K9s for Windows
  community.windows.win_scoop:
    global: true
    name: k9s
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Create K9s configuration directory for FreeBSD
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.k9s"
    state: directory
  become: true
  tags:
    - config
  when: ansible_system == "FreeBSD"

- name: Create K9s configuration directory for Linux
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.config/k9s"
    state: directory
  become: true
  tags:
    - config
  when: ansible_system == "Linux"

- name: Create K9s configuration directory for MacOS
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/Library/Application Support/k9s"
    state: directory
  become: true
  tags:
    - config
  when: ansible_system == "Darwin"

- name: Create K9s configuration directory for Windows
  ansible.windows.win_file:
    path: "{{ user_home }}\\AppData\\Local\\k9s"
    state: directory
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Copy K9s skin file for FreeBSD
  ansible.builtin.copy:
    dest: "{{ user_home }}/.k9s/skin.yml"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: skin.yml
  become: true
  tags:
    - config
  when: ansible_system == "FreeBSD"

- name: Copy K9s skin file for Linux
  ansible.builtin.copy:
    dest: "{{ user_home }}/.config/k9s/skin.yml"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: skin.yml
  become: true
  tags:
    - config
  when: ansible_system == "Linux"

- name: Copy K9s skin file for MacOS
  ansible.builtin.copy:
    dest: "{{ user_home }}/Library/Application Support/k9s/skin.yml"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: skin.yml
  become: true
  tags:
    - config
  when: ansible_system == "Darwin"

- name: Copy K9s skin file for Windows
  ansible.windows.win_copy:
    dest: "{{ user_home }}\\AppData\\Local\\k9s\\skin.yml"
    force: true
    src: skin.yml
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Set owner of K9s files for Windows
  ansible.windows.win_owner:
    path: "{{ user_home }}\\AppData\\Local\\k9s"
    recurse: true
    user: "{{ user_id }}"
  tags:
    - config
  when: ansible_system == "Win32NT"

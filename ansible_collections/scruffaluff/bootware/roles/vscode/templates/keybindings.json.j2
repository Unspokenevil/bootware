[
  { "command": "-bookmarks.toggle", "key": "{{ vscode_ctrl_key }}+alt+k" },
  { "command": "-breadcrumbs.focus", "key": "{{ vscode_ctrl_key }}+shift+;" },
  { "command": "-cursorColumnSelectLeft", "key": "shift+left" },
  { "command": "-cursorColumnSelectRight", "key": "shift+right" },
  { "command": "-cursorLeftSelect", "key": "shift+left" },
  { "command": "-cursorRightSelect", "key": "shift+right" },
  {
    "command": "-editor.action.accessibleViewAcceptInlineCompletion",
    "key": "ctrl+/"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "{{ vscode_ctrl_key }}+shift+o"
  },
  { "command": "-editor.action.blockComment", "key": "ctrl+shift+a" },
  { "command": "-editor.action.deleteLines", "key": "{{ vscode_ctrl_key }}+shift+k" },
  { "command": "-editor.action.goToBottomHover", "key": "{{ vscode_ctrl_key }}+down" },
  { "command": "-editor.action.goToTopHover", "key": "{{ vscode_ctrl_key }}+up" },
  { "command": "-editor.action.selectAll", "key": "{{ vscode_ctrl_key }}+a" },
  { "command": "-editor.action.selectHighlights", "key": "{{ vscode_ctrl_key }}+shift+l" },
  { "command": "-editor.action.toggleTabFocusMode", "key": "ctrl+shift+m" },
  { "command": "-editor.action.toggleWordWrap", "key": "alt+z" },
  { "command": "-editor.fold", "key": "ctrl+shift+[" },
  { "command": "-editor.unfold", "key": "ctrl+shift+]" },
  { "command": "-inlineChat.focus", "key": "{{ vscode_ctrl_key }}+up" },
  { "command": "-inlineChat.focus", "key": "{{ vscode_ctrl_key }}+down" },
  { "command": "-inlineChat.holdForSpeech", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-inlineChat.start", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-inlineChat.startWithCurrentLine", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-inlineChat2.reveal", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-inlineChat2.start", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-inlineChat2.stop", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-list.find", "key": "ctrl+f" },
  { "command": "-list.selectAll", "key": "{{ vscode_ctrl_key }}+a" },
  { "command": "-notebook.cell.chat.start", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-notebook.fold", "key": "ctrl+shift+[" },
  { "command": "-notebook.unfold", "key": "ctrl+shift+]" },
  { "command": "-notification.acceptPrimaryAction", "key": "{{ vscode_ctrl_key }}+shift+a" },
  { "command": "-rust-analyzer.joinLines", "key": "ctrl+shift+j" },
  { "command": "-toggleFindWholeWord", "key": "alt+w" },
  { "command": "-toggleSearchEditorWholeWord", "key": "alt+w" },
  { "command": "-toggleSearchWholeWord", "key": "alt+w" },
  { "command": "-workbench.action.chat.startVoiceChat", "key": "{{ vscode_ctrl_key }}+i" },
  {
    "command": "-workbench.action.chat.holdToVoiceChatInChatView",
    "key": "{{ vscode_ctrl_key }}+i"
  },
  {
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "key": "{{ vscode_ctrl_key }}+i"
  },
  { "command": "-workbench.action.closeActiveEditor", "key": "{{ vscode_ctrl_key }}+w" },
  { "command": "-workbench.action.closeGroup", "key": "{{ vscode_ctrl_key }}+w" },
  { "command": "-workbench.action.closeWindow", "key": "{{ vscode_ctrl_key }}+shift+w" },
  { "command": "-workbench.action.debug.continue", "key": "f5" },
  { "command": "-workbench.action.debug.restart", "key": "{{ vscode_ctrl_key }}+shift+f5" },
  { "command": "-workbench.action.debug.stepInto", "key": "f11" },
  { "command": "-workbench.action.debug.stepOut", "key": "shift+f11" },
  { "command": "-workbench.action.debug.stepOver", "key": "f10" },
  { "command": "-workbench.action.debug.stop", "key": "shift+f5" },
  { "command": "-workbench.action.files.saveAs", "key": "{{ vscode_ctrl_key }}+shift+s" },
  { "command": "-workbench.action.files.saveLocalFile", "key": "{{ vscode_ctrl_key }}+shift+s" },
  { "command": "-workbench.action.gotoLine", "key": "ctrl+g" },
  { "command": "-workbench.action.gotoSymbol", "key": "{{ vscode_ctrl_key }}+shift+o" },
  { "command": "-workbench.action.navigateBack", "key": "ctrl+-" },
  { "command": "-workbench.action.navigateForward", "key": "ctrl+shift+-" },
  { "command": "-workbench.action.files.newUntitledFile", "key": "{{ vscode_ctrl_key }}+n" },
  { "command": "-workbench.action.quickOpen", "key": "ctrl+e" },
  { "command": "-workbench.action.quickOpen", "key": "{{ vscode_ctrl_key }}+p" },
  {
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "key": "ctrl+shift+tab"
  },
  {
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "key": "ctrl+tab"
  },
  { "command": "-workbench.action.reopenClosedEditor", "key": "{{ vscode_ctrl_key }}+shift+t" },
  { "command": "-workbench.action.splitEditor", "key": "ctrl+\\" },
  { "command": "-workbench.action.switchWindow", "key": "ctrl+w" },
  { "command": "-workbench.action.tasks.build", "key": "{{ vscode_ctrl_key }}+shift+b" },
  {
    "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
    "key": "alt+down"
  },
  {
    "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
    "key": "alt+up"
  },
  { "command": "-workbench.action.terminal.chat.start", "key": "{{ vscode_ctrl_key }}+i" },
  { "command": "-workbench.action.terminal.focus", "key": "{{ vscode_ctrl_key }}+down" },
  { "command": "-workbench.action.terminal.focusFind", "key": "{{ vscode_ctrl_key }}+f" },
  { "command": "-workbench.action.terminal.focusNextPane", "key": "alt+down" },
  {
    "command": "-workbench.action.terminal.focusPreviousPane", "key": "alt+up"
  },
  {
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "key": "{{ vscode_ctrl_key }}+g"
  },
  { "command": "-workbench.action.terminal.killEditor", "key": "{{ vscode_ctrl_key }}+w" },
  {
    "command": "-workbench.action.terminal.openDetectedLink",
    "key": "{{ vscode_ctrl_key }}+shift+g"
  },
  {
    "command": "-workbench.action.terminal.openDetectedLink",
    "key": "{{ vscode_ctrl_key }}+shift+o"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "{{ vscode_ctrl_key }}+shift+c"
  },
  {
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "key": "{{ vscode_ctrl_key }}+down"
  },
  {
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "key": "{{ vscode_ctrl_key }}+up"
  },
  {
    "command": "-workbench.action.terminal.searchWorkspace",
    "key": "{{ vscode_ctrl_key }}+shift+f"
  },
  { "command": "-workbench.action.terminal.sendSequence", "key": "alt+down" },
  { "command": "-workbench.action.terminal.sendSequence", "key": "alt+up" },
  {
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "key": "alt+z"
  },
  {
    "command": "-workbench.action.terminal.suggestToggleDetails",
    "key": "{{ vscode_ctrl_key }}+i"
  },
  {
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "key": "alt+w"
  },
  { "command": "-workbench.action.terminal.toggleTerminal", "key": "ctrl+`" },
  { "command": "-workbench.action.togglePanel", "key": "{{ vscode_ctrl_key }}+j" },
  { "command": "-workbench.action.toggleSidebarVisibility", "key": "{{ vscode_ctrl_key }}+b" },
  { "command": "-workbench.actions.view.problems", "key": "{{ vscode_ctrl_key }}+shift+m" },
  { "command": "-workbench.debug.action.toggleRepl", "key": "{{ vscode_ctrl_key }}+shift+y" },
  { "command": "-workbench.debug.panel.action.clearReplAction", "key": "{{ vscode_ctrl_key }}+k" },
  { "command": "-workbench.files.action.compareWithSaved", "key": "{{ vscode_ctrl_key }}+k d" },
  { "command": "-workbench.view.extensions", "key": "{{ vscode_ctrl_key }}+shift+x" },
  {
    "command": "acceptSelectedSuggestion",
    "key": "ctrl+i",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "actions.find",
    "key": "ctrl+f",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "bookmarks.listFromAllFiles",
    "key": "{{ vscode_ctrl_key }}+k l"
  },
  {
    "command": "bookmarks.toggle",
    "key": "{{ vscode_ctrl_key }}+k b",
    "when": "editorTextFocus"
  },
  {
    "command": "bookmarks.toggleLabeled",
    "key": "{{ vscode_ctrl_key }}+k m",
    "when": "editorTextFocus"
  },
  {
    "command": "breadcrumbs.focusAndSelect",
    "key": "ctrl+shift+.",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "command": "cursorDown",
    "key": "alt+k",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "cursorLeft",
    "key": "alt+j",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "cursorLineEnd",
    "key": "ctrl+e",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "cursorLineStart",
    "key": "ctrl+a",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "cursorRight",
    "key": "alt+;",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "cursorUp",
    "key": "alt+l",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "cursorWordLeft",
    "key": "shift+left",
    "when": "textInputFocus"
  },
  {
    "command": "cursorWordPartLeft",
    "key": "alt+b",
    "when": "textInputFocus"
  },
  {
    "command": "cursorWordPartLeft",
    "key": "ctrl+left",
    "when": "textInputFocus"
  },
  {
    "command": "cursorWordPartRight",
    "key": "alt+f",
    "when": "textInputFocus"
  },
  {
    "command": "cursorWordPartRight",
    "key": "ctrl+right",
    "when": "textInputFocus"
  },
  {
    "command": "cursorWordRight",
    "key": "shift+right",
    "when": "textInputFocus"
  },
  {
    "command": "deleteAllLeft",
    "key": "ctrl+u",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "deleteWordLeft",
    "key": "ctrl+w",
    "when": "textInputFocus && !terminalFocus"
  },
  {
    "command": "deleteWordRight",
    "key": "alt+w",
    "when": "textInputFocus && !terminalFocus"
  },
  { "command": "editor.action.clipboardCopyAction", "key": "ctrl+c" },
  { "command": "editor.action.clipboardPasteAction", "key": "ctrl+v" },
  {
    "command": "editor.action.commentLine",
    "key": "ctrl+/",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.goToImplementation",
    "key": "ctrl+g i",
    "when": "editorTextFocus && editorHasImplementationProvider"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "ctrl+g r",
    "when": "editorTextFocus && editorHasReferenceProvider && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "editor.action.goToTypeDefinition",
    "key": "ctrl+g t",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertCursorAbove",
    "key": "ctrl+up",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertCursorBelow",
    "key": "ctrl+down",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertLineAfter",
    "key": "shift+enter",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertLineBefore",
    "key": "ctrl+shift+enter",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.marker.nextInFiles",
    "key": "ctrl+g p",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.marker.prevInFiles",
    "key": "ctrl+g shift+p",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.revealDeclaration",
    "key": "ctrl+g shift+d",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "ctrl+g d",
    "when": "editorTextFocus && editorHasDefinitionProvider"
  },
  {
    "command": "editor.action.quickFix",
    "key": "ctrl+.",
    "when": "textInputFocus && editorHasCodeActionsProvider"
  },
  {
    "command": "editor.action.startFindReplaceAction",
    "key": "ctrl+h",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "editor.action.triggerSuggest",
    "key": "ctrl+i",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "expandLineSelection",
    "key": "ctrl+l",
    "when": "textInputFocus"
  },
  {
    "command": "focusSuggestion",
    "key": "ctrl+i",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  { "command": "redo", "key": "ctrl+shift+z" },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "ctrl+shift+m",
    "when": "editorFocus && !panelVisible && sideBarVisible"
  },
  {
    "args": {
      "commands": [
        "workbench.action.togglePanel",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "ctrl+shift+m",
    "when": "editorFocus && panelVisible && !sideBarVisible"
  },
  {
    "args": {
      "commands": [
        "workbench.action.togglePanel",
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "ctrl+shift+m",
    "when": "editorFocus && ((panelVisible && sideBarVisible) || (!panelVisible && !sideBarVisible))"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleMaximizedPanel",
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    "command": "runCommands",
    "key": "ctrl+shift+m",
    "when": "panelFocus && ((panelMaximized && !sideBarVisible) || (!panelMaximized && sideBarVisible))"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+n",
    "when": "suggestWidgetVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+p",
    "when": "suggestWidgetVisible"
  },
  {
    "command": "toggleSuggestionDetails",
    "key": "ctrl+i",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  { "command": "undo", "key": "ctrl+z" },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "ctrl+shift+w",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.compareEditor.nextChange",
    "key": "ctrl+g g",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "workbench.action.compareEditor.nextChange",
    "key": "ctrl+shift+]",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "workbench.action.compareEditor.previousChange",
    "key": "ctrl+g shift+g",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "workbench.action.compareEditor.previousChange",
    "key": "ctrl+shift+[",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "workbench.action.debug.callStackDown",
    "key": "alt+d",
    "when": "debugState == 'stopped' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.callStackUp",
    "key": "alt+u",
    "when": "debugState == 'stopped' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.continue",
    "key": "alt+c",
    "when": "debugState == 'stopped' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.disconnect",
    "key": "alt+q",
    "when": "inDebugMode && focusedSessionIsAttach"
  },
  {
    "command": "workbench.action.debug.nextConsole",
    "key": "ctrl+shift+;",
    "when": "panelFocus && activePanel == 'workbench.panel.repl'"
  },
  {
    "command": "workbench.action.debug.pause",
    "key": "alt+p",
    "when": "debugState == 'running' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.prevConsole",
    "key": "ctrl+shift+j",
    "when": "panelFocus && activePanel == 'workbench.panel.repl'"
  },
  {
    "command": "workbench.action.debug.restart",
    "key": "alt+r",
    "when": "inDebugMode"
  },
  {
    "command": "workbench.action.debug.start",
    "key": "ctrl+shift+d",
    "when": "debuggersAvailable && activeViewlet == 'workbench.view.debug' && !inDebugMode"
  },
  {
    "command": "workbench.action.debug.stepInto",
    "key": "alt+s",
    "when": "debugState == 'stopped' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.stepOut",
    "key": "alt+o",
    "when": "debugState == 'stopped' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.stepOver",
    "key": "alt+n",
    "when": "debugState == 'stopped' && !terminalFocus"
  },
  {
    "command": "workbench.action.debug.stop",
    "key": "alt+q",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "command": "workbench.action.editor.nextChange",
    "key": "ctrl+shift+]",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "command": "workbench.action.editor.previousChange",
    "key": "ctrl+shift+[",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "command": "workbench.action.files.newUntitledFile",
    "key": "ctrl+shift+n",
    "when": "!panelFocus"
  },
  { "command": "workbench.action.files.save", "key": "ctrl+s" },
  { "command": "workbench.action.findInFiles", "key": "ctrl+shift+f" },
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "ctrl+shift+s",
    "when": "panelFocus"
  },
  { "command": "workbench.action.gotoLine", "key": "ctrl+g l" },
  {
    "command": "workbench.action.moveEditorLeftInGroup",
    "key": "ctrl+shift+left",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.moveEditorRightInGroup",
    "key": "ctrl+shift+right",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.navigateBack",
    "key": "ctrl+[",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.navigateBack",
    "key": "ctrl+g j",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.navigateForward",
    "key": "ctrl+]",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.navigateForward",
    "key": "ctrl+g ;",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "ctrl+shift+;",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "ctrl+tab",
    "when": "!panelFocus"
  },
{% if ansible_system == "Darwin" %}
  {
    "command": "workbench.action.openEditorAtIndex1",
    "key": "cmd+1",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex2",
    "key": "cmd+2",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex3",
    "key": "cmd+3",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex4",
    "key": "cmd+4",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex5",
    "key": "cmd+5",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex6",
    "key": "cmd+6",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex7",
    "key": "cmd+7",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex8",
    "key": "cmd+8",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.openEditorAtIndex9",
    "key": "cmd+9",
    "when": "!panelFocus"
  },
{% endif %}
  { "command": "workbench.action.positionPanelBottom", "key": "ctrl+shift+b" },
  { "command": "workbench.action.positionPanelRight", "key": "ctrl+shift+r" },
  {
    "command": "workbench.action.previousEditor",
    "key": "ctrl+shift+j",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "ctrl+shift+tab",
    "when": "!panelFocus"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "ctrl+shift+o"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  { "command": "workbench.action.replaceInFiles", "key": "ctrl+shift+h" },
  { "command": "workbench.action.showCommands", "key": "ctrl+shift+p" },
  {
    "command": "workbench.action.splitEditor",
    "key": "ctrl+\\",
    "when": "editorFocus"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "ctrl+shift+s",
    "when": "!panelFocus && activePanel != 'workbench.panel.repl'"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "ctrl+shift+t",
    "when": "!terminalFocus"
  },
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "ctrl+shift+;",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.focusPrevious",
    "key": "ctrl+shift+j",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.focusNextPane",
    "key": "ctrl+shift+l",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.focusPreviousPane",
    "key": "ctrl+shift+k",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "ctrl+shift+w",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.newInActiveWorkspace",
    "key": "ctrl+shift+t",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue000" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+;",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue001" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+.",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue002" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+[",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue003" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+]",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue004" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+/",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue005" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+\\",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue006" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+i",
    "when": "terminalFocus"
  },
  {
    "args": { "text": "\ue007" },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+j",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.split",
    "key": "ctrl+shift+n",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.toggleMaximizedPanel",
    "key": "ctrl+shift+m",
    "when": "panelFocus && ((panelMaximized && sideBarVisible) || (!panelMaximized && !sideBarVisible))"
  },
  { "command": "workbench.action.togglePanel", "key": "ctrl+shift+x" },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+shift+a"
  },
  {
    "command": "workbench.debug.panel.action.clearReplAction",
    "key": "ctrl+l",
    "when": "panelFocus && activePanel == 'workbench.panel.repl'"
  },
  {
    "command": "workbench.panel.repl.view.focus",
    "key": "ctrl+shift+s",
    "when": "!panelFocus && activePanel == 'workbench.panel.repl'"
  },
  {
    "command": "workbench.panel.repl.view.focus",
    "key": "ctrl+shift+y"
  },
  {
    "command": "workbench.view.debug",
    "key": "ctrl+shift+d",
    "when": "activeViewlet != 'workbench.view.debug' || inDebugMode"
  },
  {
    "command": "workbench.view.explorer",
    "key": "ctrl+shift+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  }
]

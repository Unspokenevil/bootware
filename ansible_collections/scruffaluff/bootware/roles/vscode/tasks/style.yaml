---
- name: Check if newer VSCode Electron structure is available for Unix
  ansible.builtin.stat:
    path: "{{ vscode_path }}/out/vs/code/electron-browser"
  register: vscode_electron_check_unix
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Check if newer VSCode Electron structure is available for Windows
  ansible.windows.win_stat:
    path: "{{ vscode_path }}\\out\\vs\\code\\electron-browser"
  register: vscode_electron_check_windows
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Set VSCode Electron check
  ansible.builtin.set_fact:
    vscode_electron_check: >-
      {{ vscode_electron_check_unix if vscode_electron_check_unix is defined and
      not 'skipped' in vscode_electron_check_unix else
      vscode_electron_check_windows }}

- name: Set VSCode Electron folder name
  ansible.builtin.set_fact:
    vscode_electron: >-
      {{ 'electron-browser' if vscode_electron_check.stat.exists else
      'electron-sandbox' }}

- name: Backup VSCode internal files for Unix
  ansible.builtin.copy:
    dest: "{{ item }}.bak"
    force: false
    mode: preserve
    remote_src: true
    src: "{{ item }}"
  become: true
  loop:
    - "{{ vscode_path }}/product.json"
    - >-
      {{ vscode_path }}/out/vs/code/{{ vscode_electron
      }}/workbench/workbench.html
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Backup VSCode internal files for Windows
  ansible.windows.win_copy:
    dest: "{{ item }}.bak"
    force: false
    remote_src: true
    src: "{{ item }}"
  loop:
    - "{{ vscode_path }}\\product.json"
    - >-
      {{ vscode_path }}\out\vs\code\{{ vscode_electron
      }}\workbench\workbench.html
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Update VSCode styles for Unix
  ansible.builtin.blockinfile:
    block: "{{ vscode_custom_html }}"
    create: false
    insertbefore: </html>
    marker: >-
      <!--{mark} ANSIBLE MANAGED styles for VSCode BLOCK-->
    path: >-
      {{ vscode_path }}/out/vs/code/{{ vscode_electron
      }}/workbench/workbench.html
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Update VSCode styles for Windows
  community.windows.win_lineinfile:
    create: false
    insertbefore: </html>
    line: "{{ vscode_custom_html | replace('\n', '') }}"
    path: >-
      {{ vscode_path }}\out\vs\code\{{ vscode_electron
      }}\workbench\workbench.html
    state: present
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Read contents of VSCode workbench file
  ansible.builtin.slurp:
    src: >-
      {{ vscode_path }}/out/vs/code/{{ vscode_electron
      }}/workbench/workbench.html
  register: vscode_workbench_file
  tags:
    - config

- name: Compute checksum of VSCode workbench file
  ansible.builtin.set_fact:
    vscode_workbench_checksum: >-
      {{ vscode_workbench_file['content'] | b64decode |
      scruffaluff.bootware.vscode_checksum }}
  tags:
    - config

- name: Write contents of VSCode product file for Unix
  ansible.builtin.lineinfile:
    backrefs: true
    line: '\g<1>"{{ vscode_workbench_checksum }}",'
    path: "{{ vscode_path }}/product.json"
    regexp:
      '^(\s+"vs/code/{{ vscode_electron }}/workbench/workbench.html":\s+)".*",$'
    state: present
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Write contents of VSCode product file for Windows
  community.windows.win_lineinfile:
    backrefs: true
    line: '$1"{{ vscode_workbench_checksum }}",'
    path: "{{ vscode_path }}/product.json"
    regexp:
      '^(\s+"vs/code/{{ vscode_electron }}/workbench/workbench.html":\s+)".*",$'
    state: present
  tags:
    - config
  when: ansible_system == "Win32NT"

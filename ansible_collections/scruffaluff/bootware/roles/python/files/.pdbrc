# Python debugger settings file.
#
# For more information, visit https://docs.python.org/3/library/pdb.html.

import importlib
import os
import pdb
import rlcompleter
import sys

# Add local variables to command line completion.
pdb.Pdb.complete = rlcompleter.Completer(locals()).complete

# Load interactive functions from pyrc module.
spec = importlib.util.spec_from_file_location("pyrc", os.path.expanduser("~/.pyrc.py"))
pyrc = importlib.util.module_from_spec(spec)
sys.modules["pyrc"] = pyrc
spec.loader.exec_module(pyrc)

# Remove setup imports and variables from namespace.
del importlib, os, pdb, rlcompleter, spec, sys

# Print object catalog with pager.
alias cat pyrc.cat(%1, name="%1", regex=pyrc.get("%*".split(), index=1, default="^[^_].*"))
# Set breakpoint and continue.
alias cb tbreak %1;; continue
# Print documentation for object.
alias docs pyrc.docs(%1)
# Open object source code in editor.
alias edit pyrc.edit(pyrc.get([%*]), frame=$_frame)
# Next and list code.
alias nl next;; list
# Print global variables.
alias pg __globals = lambda: None; __globals.__dict__ = globals(); pyrc.cat(__globals, name="globals", regex=pyrc.get("%*".split(), default="^[^_].*")); del __globals
# Print local variables.
alias pl __locals = lambda: None; __locals.__dict__ = locals(); __locals.__dict__ = {key: value for key, value in __locals.__dict__.items() if key != "__locals"}; pyrc.cat(__locals, name="locals", regex=pyrc.get("%*".split(), default="^[^_].*")); del __locals
# Step and list code.
alias sl step;; list
# Step and list code.
alias sh pyrc.shell(pyrc.get([%*]), frame=$_frame)

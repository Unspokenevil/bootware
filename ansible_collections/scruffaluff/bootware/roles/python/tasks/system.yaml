---
- name: Install Python for Alpine
  become: true
  community.general.apk:
    name:
      - pipx
      - py3-pip
      - python3
      - python3-dev
  tags:
    - install
  when: ansible_pkg_mgr == "apk"

- name: Install Python for Arch
  become: true
  community.general.pacman:
    name:
      - python
      - python-pip
      - python-pipx
  tags:
    - install
  when: ansible_pkg_mgr == "pacman"

- name: Install Python for Debian
  ansible.builtin.apt:
    name:
      - pipx
      - python3
      - python3-dev
      - python3-pip
      - python3-venv
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Install Python for Fedora
  ansible.builtin.dnf:
    name:
      - pipx
      - python3
      - python3-devel
      - python3-pip
  become: true
  tags:
    - install
  when: ansible_pkg_mgr in ["dnf", "dnf5"]

# Rust is required for installing many Python applications on FreeBSD.
- name: Install Python for FreeBSD
  become: true
  community.general.pkgng:
    name:
      - py311-pip
      - py311-pipx
      - python3
      - rust
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Install Python for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name:
      - pipx
      - python3
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install Python for OpenWrt
  become: true
  community.general.opkg:
    name:
      - python3
      - python3-dev
      - python3-pip
      - python3-venv
  tags:
    - install
  when: ansible_pkg_mgr == "opkg"

- name: Install Python for Suse
  become: true
  community.general.zypper:
    name:
      - python3
      - python3-pip
      - python312-pipx
  tags:
    - install
  when: ansible_pkg_mgr == "zypper"

- name: Install Python for Windows
  community.windows.win_scoop:
    global: true
    name:
      - pipx
      - python
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Make Python symlinks for MacOS
  ansible.builtin.file:
    src: "{{ brew_prefix }}/bin/{{ item }}3"
    dest: "{{ brew_prefix }}/bin/{{ item }}"
    force: true
    mode: "755"
    state: link
  become: true
  loop:
    - pip
    - python
  tags:
    - install
  when: ansible_system == "Darwin"

# While Python Microsoft Store links are listed app execution aliases in Windows
# settings, they are actually reparse point and require fsutil for permanent
# deletion.
#
# For more information, visit
# https://michielvoo.net/2023/02/12/windows-11-app-execution-aliases.html.
- name: Remove Microsoft Store links masquerading as Python for Windows
  ansible.windows.win_shell: |
    $Path = "{{ user_home }}\AppData\Local\Microsoft\WindowsApps\{{ item }}"
    if (Test-Path $Path) {
      fsutil reparsepoint delete $Path
      Remove-Item -Force $Path
    }
  loop:
    - python.exe
    - python3.exe
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Install Python applications for Unix
  ansible.builtin.shell: # noqa command-instead-of-shell
    cmd: >-
      pipx install {{ item.name if item.name is defined else item }}{{ ' && pipx
      inject ' + item.name + ' ' + (item.extras | join(' ')) if item.extras is
      defined else '' }}
  become: true
  become_user: "{{ user_id }}"
  changed_when: "'already installed' not in python_application_unix.stderr"
  environment:
    PATH: >-
      {{ user_home }}/.local/bin:/opt/homebrew/bin:/usr/local/bin:{{
      ansible_env.PATH }}
  loop: "{{ python_applications }}"
  register: python_application_unix
  tags:
    - plugin
  when: ansible_system != "Win32NT" and ansible_pkg_mgr != "opkg"

- name: Install Python applications for Windows
  ansible.windows.win_shell: >-
    (pipx install {{ item.name if item.name is defined else item }}) -And ({{
    'pipx inject ' + item.name + ' ' + (item.extras | join(' ')) if item.extras
    is defined else '? .' }})
  changed_when: "'already installed' not in python_application_windows"
  environment:
    Path: "{{ scoop_path }}\\shims;{{ ansible_env.Path }}"
  loop: "{{ python_applications }}"
  register: python_application_windows
  tags:
    - plugin
  when: ansible_system == "Win32NT"

- name: Set owner of Python files for Windows
  ansible.windows.win_owner:
    path: "{{ user_home }}\\{{ item }}"
    recurse: true
    user: "{{ user_id }}"
  loop:
    - .local\bin
    - .shiv
    - pipx
  tags:
    - install

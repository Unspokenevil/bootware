---
- name: Install Docker for Alpine
  become: true
  community.general.apk:
    name: docker
  tags:
    - install
  when: ansible_pkg_mgr == "apk"

- name: Install Docker for Arch
  become: true
  community.general.pacman:
    name: docker
  tags:
    - install
  when: ansible_pkg_mgr == "pacman"

- name: Install Docker repository dependencies for Debian
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Create Docker temporary directory for Debian
  ansible.builtin.tempfile:
    state: directory
  register: docker_temp
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Set Docker temporary directory permissions for Debian
  ansible.builtin.file:
    mode: "755"
    path: "{{ docker_temp.path }}"
    state: directory
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Download Docker GPG key for Debian
  ansible.builtin.get_url:
    dest: "{{ docker_temp.path }}/docker-archive-keyring.gpg"
    mode: "640"
    url: https://download.docker.com/linux/debian/gpg
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Add Docker GPG key for Debian
  ansible.builtin.command:
    cmd: >-
      gpg --batch --dearmor --yes --output
      /usr/share/keyrings/docker-archive-keyring.gpg {{ docker_temp.path
      }}/docker-archive-keyring.gpg
    creates: /usr/share/keyrings/docker-archive-keyring.gpg
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Add Docker repository for Debian
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ system_architecture }}
      signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
      https://download.docker.com/linux/debian {{ ansible_distribution_release |
      lower }} stable
    state: present
    filename: docker
  become: true
  ignore_errors: true
  register: docker_debian
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Add Docker repository for Ubuntu
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ system_architecture }}
      signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
      https://download.docker.com/linux/ubuntu {{ ansible_distribution_release |
      lower }} stable
    state: present
    filename: docker
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apt" and docker_debian is failed

- name: Install Docker for Debian
  ansible.builtin.apt:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
    update_cache: true
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apt"

- name: Add Docker repository for Fedora
  ansible.builtin.get_url:
    dest: /etc/yum.repos.d/docker-ce.repo
    mode: "644"
    url: https://download.docker.com/linux/fedora/docker-ce.repo
  become: true
  tags:
    - install
  when: ansible_pkg_mgr in ["dnf", "dnf5"]

- name: Install Docker for Fedora
  ansible.builtin.dnf:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
  become: true
  tags:
    - install
  when: ansible_pkg_mgr in ["dnf", "dnf5"]

- name: Install Docker for FreeBSD
  become: true
  community.general.pkgng:
    name: docker
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Install Docker for MacOS
  community.general.homebrew_cask:
    accept_external_apps: true
    name: docker
    state: present
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install Docker for Windows
  chocolatey.chocolatey.win_chocolatey:
    name: docker-desktop
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Check if service manager is available for Alpine
  ansible.builtin.stat:
    path: /sbin/service
  register: docker_service
  tags:
    - install
  when: ansible_pkg_mgr == "apk"

- name: Check if systemd is available for Linux
  ansible.builtin.stat:
    path: /usr/bin/systemctl
  register: docker_systemd
  tags:
    - install
  when: ansible_system == "Linux"

- name: Start Containerd on system boot for Alpine
  ansible.builtin.service:
    enabled: true
    name: containerd
    state: started
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apk" and docker_service.stat.exists

- name: Start Containerd on system boot for Linux
  ansible.builtin.systemd:
    enabled: true
    name: containerd
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and docker_systemd.stat.exists

- name: Start Docker on system boot for Alpine
  ansible.builtin.service:
    enabled: true
    name: docker
    state: started
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apk" and docker_service.stat.exists

- name: Start Docker on system boot for Linux
  ansible.builtin.systemd:
    enabled: true
    name: docker
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and docker_systemd.stat.exists

- name: Add user to Docker group for Alpine
  ansible.builtin.user:
    append: true
    groups:
      - docker
    name: "{{ user_id }}"
  become: true
  tags:
    - install
  when: ansible_pkg_mgr == "apk" and docker_service.stat.exists

- name: Add user to Docker group for Linux
  ansible.builtin.user:
    append: true
    groups:
      - docker
    name: "{{ user_id }}"
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and docker_systemd.stat.exists

- name: Install Docker shell completions for Unix
  ansible.builtin.get_url:
    dest: "{{ item.dest }}"
    mode: "644"
    url: >-
      https://raw.githubusercontent.com/docker/cli/master/contrib/completion/{{
      item.path }}
  become: true
  loop:
    - dest: "{{ bash_completion }}/docker"
      path: bash/docker
    - dest: "{{ fish_completion }}/docker.fish"
      path: fish/docker.fish
  tags:
    - completion
    - install
  when: ansible_system != "Win32NT"

- name: Mark role as executed to prevent reruns
  ansible.builtin.set_fact:
    cacheable: true
    docker_role_executed: true

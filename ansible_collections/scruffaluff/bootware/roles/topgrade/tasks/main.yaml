---
- name: Install Topgrade for FreeBSD
  become: true
  community.general.pkgng:
    name: topgrade
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Install Topgrade for Linux
  ansible.builtin.package:
    name: topgrade
  become: true
  ignore_errors: true
  register: topgrade_linux
  tags:
    - install
  when: ansible_system == "Linux"

- name: Get latest Topgrade version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/topgrade.json
  register: topgrade_formula
  tags:
    - install
  when: ansible_system == "Linux" and topgrade_linux is failed

- name: Create Topgrade temporary directory for Linux
  ansible.builtin.tempfile:
    state: directory
  register: topgrade_temp
  tags:
    - install
  when: ansible_system == "Linux" and topgrade_linux is failed

- name: Download Topgrade for Linux
  ansible.builtin.unarchive:
    dest: "{{ topgrade_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/topgrade-rs/topgrade/releases/download/v{{
      topgrade_formula.json.versions.stable }}/topgrade-v{{
      topgrade_formula.json.versions.stable }}-{{
      topgrade_arch[system_architecture] }}-unknown-linux-{{ topgrade_libc
      }}.tar.gz
  tags:
    - install
  vars:
    topgrade_arch:
      amd64: x86_64
      arm64: aarch64
    topgrade_libc: >-
      {{ 'gnu' if glibc_version is defined and glibc_version is
      ansible.builtin.version("2.39", ">") else 'musl' }}
  when: ansible_system == "Linux" and topgrade_linux is failed

- name: Install Topgrade for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/topgrade
    force: true
    mode: "755"
    remote_src: true
    src: "{{ topgrade_temp.path }}/topgrade"
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and topgrade_linux is failed

- name: Install Topgrade for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: topgrade
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install Topgrade for Windows
  community.windows.win_scoop:
    global: "{{ scoop_global }}"
    name: topgrade
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Copy Topgrade settings file for Unix
  ansible.builtin.template:
    dest: "{{ user_home }}/.config/topgrade.toml"
    force: true
    group: "{{ group_id }}"
    mode: "640"
    owner: "{{ user_id }}"
    src: topgrade.toml.j2
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Copy Topgrade settings file for Windows
  ansible.windows.win_template:
    dest: "{{ user_home }}\\AppData\\Roaming\\topgrade.toml"
    force: true
    src: topgrade.toml.j2
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Set owner of Topgrade files for Windows
  ansible.windows.win_owner:
    path: "{{ user_home }}\\AppData\\Roaming\\topgrade.toml"
    user: "{{ user_id }}"
  tags:
    - config
  when: ansible_system == "Win32NT"

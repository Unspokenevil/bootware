---
- name: Create Deno temporary directory for Unix
  ansible.builtin.tempfile:
    state: directory
  register: deno_temp
  tags:
    - install
  when: >-
    ansible_system in ["Darwin", "FreeBSD"] or (ansible_system == "Linux" and
    system_libc == "gnu") or ansible_pkg_mgr == "apk"

- name: Install Deno for Alpine
  become: true
  community.general.apk:
    name: deno
  tags:
    - install
  when: ansible_pkg_mgr == "apk"

- name: Install Deno for FreeBSD
  become: true
  community.general.pkgng:
    name: deno
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Download Deno for Unix
  ansible.builtin.unarchive:
    dest: "{{ deno_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/denoland/deno/releases/latest/download/deno-{{
      deno_arch[system_architecture] }}-{{ deno_env[ansible_system] }}.zip
  tags:
    - install
  vars:
    deno_arch:
      amd64: x86_64
      arm64: aarch64
    deno_env:
      Darwin: apple-darwin
      Linux: unknown-linux-{{ system_libc }}
  when: >-
    ansible_system == "Darwin" or (ansible_system == "Linux" and system_libc ==
    "gnu")

- name: Install Deno for Unix
  ansible.builtin.copy:
    dest: /usr/local/bin/deno
    force: true
    mode: "755"
    remote_src: true
    src: "{{ deno_temp.path }}/deno"
  become: true
  tags:
    - install
  when: >-
    ansible_system == "Darwin" or (ansible_system == "Linux" and system_libc ==
    "gnu")

- name: Install Deno for Windows
  community.windows.win_scoop:
    global: true
    name: deno
  tags:
    - install
  when: ansible_system == "Win32NT"

# Microsft File Explorer overrides any file assoications for ts files. So
# extension tsx must be used instead.
- name: Register JavaScript and TypeScript files as executables for Windows
  ansible.windows.win_regedit:
    data: "{{ item.data }}"
    path: "{{ item.path }}"
    type: string
  loop:
    - data: jsfile
      path: "HKLM:\\Software\\Classes\\.js"
    - data: >-
        "{{ scoop_path }}\shims\deno.exe" run --allow-all --no-config --quiet
        --node-modules-dir=none "%1" %*
      path: "HKLM:\\Software\\Classes\\jsfile\\shell\\open\\command"
    - data: tsxfile
      path: "HKLM:\\Software\\Classes\\.tsx"
    - data: >-
        "{{ scoop_path }}\shims\deno.exe" run --allow-all --no-config --quiet
        --node-modules-dir=none "%1" %*
      path: "HKLM:\\Software\\Classes\\tsxfile\\shell\\open\\command"
  tags:
    - install
  when: ansible_system == "Win32NT"

# Since ansible_env.Path is fixed on play connection, using
# ansible.windows.win_environment for PATHEXT in other roles will overwrite
# changes made here. Thus ansible.windows.win_environment cannot be used to
# extend PATHEXT.
- name: Add JavaScript and TypeScript files to system path for Windows
  ansible.windows.win_shell: |
    $PathExt = [Environment]::GetEnvironmentVariable('PATHEXT', 'Machine')
    If (-Not ($PathExt -Like "*.{{ item }}*")) {
      [System.Environment]::SetEnvironmentVariable(
        'PATHEXT', "$PathExt;.{{ item }}", 'Machine'
      )
      Write-Output 'PATHEXT updated'
    }
  changed_when: "'PATHEXT updated' in deno_pathext"
  loop:
    - JS
    - TSX
  register: deno_pathext
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Create Deno shell completions for Unix
  ansible.builtin.shell:
    cmd: deno completions {{ item }} > {{ deno_temp.path }}/deno.{{ item }}
  become: true
  changed_when: true
  environment:
    PATH: /opt/homebrew/bin:/usr/local/bin:{{ ansible_env.PATH }}
  loop:
    - bash
    - fish
  tags:
    - completion
    - install
  when: >-
    ansible_system in ["Darwin", "FreeBSD"] or (ansible_system == "Linux" and
    system_libc == "gnu") or ansible_pkg_mgr == "apk"

- name: Install Deno shell completions for Unix
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    force: true
    mode: "644"
    remote_src: true
    src: "{{ deno_temp.path }}/deno.{{ item.shell }}"
  become: true
  loop:
    - dest: "{{ bash_completion }}/deno"
      shell: bash
    - dest: "{{ fish_completion }}/deno.fish"
      shell: fish
  tags:
    - completion
    - install
  when: >-
    ansible_system in ["Darwin", "FreeBSD"] or (ansible_system == "Linux" and
    system_libc == "gnu") or ansible_pkg_mgr == "apk"

- name: Create Deno PowerShell completions for Windows
  # Using "WriteAllLines" to avoid the Byte Order Mark (BOM) that PowerShell 5
  # prepends to outputs redirected to files.
  ansible.windows.win_shell: |
    $Text = deno completions powershell
    [System.IO.File]::WriteAllLines("{{ item }}\DenoCompletion.psm1", $Text)
  changed_when: true
  environment:
    Path: "{{ scoop_path }}\\shims;{{ ansible_env.Path }}"
  loop: "{{ powershell_module_paths }}"
  tags:
    - completion
    - install
  when: ansible_system == "Win32NT"

- name: Mark role as executed to prevent reruns
  ansible.builtin.set_fact:
    cacheable: true
    deno_role_executed: true

- name: Remove Deno temporary directory for Unix
  ansible.builtin.file:
    path: "{{ deno_temp.path }}"
    state: absent
  tags:
    - install
  when: >-
    ansible_system in ["Darwin", "FreeBSD"] or (ansible_system == "Linux" and
    system_libc == "gnu") or ansible_pkg_mgr == "apk"

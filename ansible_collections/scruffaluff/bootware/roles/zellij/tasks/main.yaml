---
- name: Create Zellij temporary directory for Unix
  ansible.builtin.tempfile:
    state: directory
  register: zellij_temp
  tags:
    - install
  when: ansible_system != "Win32NT"

- name: Install Zellij for FreeBSD
  become: true
  community.general.pkgng:
    name: zellij
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Install Zellij for Linux
  ansible.builtin.package:
    name: zellij
  become: true
  ignore_errors: true
  register: zellij_linux
  tags:
    - install
  when: ansible_system == "Linux"

- name: Get latest Zellij version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/zellij.json
  register: zellij_formula
  tags:
    - install
  when: ansible_system == "Linux" and zellij_linux is failed

- name: Download Zellij for Linux
  ansible.builtin.unarchive:
    dest: "{{ zellij_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/zellij-org/zellij/releases/download/v{{
      zellij_formula.json.versions.stable }}/zellij-{{
      zellij_arch[system_architecture] }}-unknown-linux-musl.tar.gz
  tags:
    - install
  vars:
    zellij_arch:
      amd64: x86_64
      arm64: aarch64
  when: ansible_system == "Linux" and zellij_linux is failed

- name: Install Zellij for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/zellij
    force: true
    mode: "755"
    remote_src: true
    src: "{{ zellij_temp.path }}/zellij"
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and zellij_linux is failed

- name: Install Zellij for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: zellij
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Create Zellij shell completions for Unix
  ansible.builtin.shell:
    cmd: >-
      zellij setup --generate-completion {{ item }} > {{ zellij_temp.path
      }}/zellij.{{ item }}
  become: true
  changed_when: true
  environment:
    PATH: /opt/homebrew/bin:/usr/local/bin:{{ ansible_env.PATH }}
  loop:
    - bash
    - fish
  tags:
    - completion
    - install
  when: ansible_system != "Win32NT"

- name: Install Zellij shell completions for Unix
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    force: true
    mode: "644"
    remote_src: true
    src: "{{ zellij_temp.path }}/zellij.{{ item.shell }}"
  become: true
  loop:
    - dest: "{{ bash_completion }}/zellij"
      shell: bash
    - dest: "{{ fish_completion }}/zellij.fish"
      shell: fish
  tags:
    - completion
    - install
  when: ansible_system != "Win32NT"

- name: Create Zellij settings directories for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.config/{{ item }}"
    state: directory
  become: true
  loop:
    - zellij
    - zellij/layouts
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Copy Zellij settings file for Unix
  ansible.builtin.template:
    dest: "{{ user_home }}/.config/zellij/config.kdl"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: config.kdl.j2
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Copy Zellij layout files for Unix
  ansible.builtin.copy:
    dest: "{{ user_home }}/.config/zellij/{{ item.dest }}"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: "{{ item.src }}"
  become: true
  loop:
    - dest: layouts/layout.kdl
      src: layout.kdl
    - dest: layouts/layout.swap.kdl
      src: layout.swap.kdl
  tags:
    - config
  when: ansible_system != "Win32NT"

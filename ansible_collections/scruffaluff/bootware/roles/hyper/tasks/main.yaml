---
# Since Appimages use FUSE, Hyper cannot be version checked within a Docker
# container. For more information, visit
# https://github.com/AppImage/AppImageKit/wiki/FUSE#docker.
- name: Install Hyper for Arch
  ansible.builtin.get_url:
    dest: /usr/local/appimages/hyper.appimage
    mode: "755"
    owner: root
    url: >-
      https://releases.hyper.is/download/AppImage{{ '_arm64' if
      system_architecture == 'arm64' else '' }}
  become: true
  when: ansible_pkg_mgr == "pacman"

- name: Install Hyper dependencies for Fedora
  ansible.builtin.dnf:
    name: mesa-libgbm
  become: true
  when: ansible_pkg_mgr == "dnf" and system_architecture == "amd64"

- name: Install Hyper for Debian
  ansible.builtin.apt:
    deb: >-
      https://releases.hyper.is/download/deb{{ '_arm64' if system_architecture
      == 'arm64' else '' }}
  become: true
  when: ansible_pkg_mgr == "apt"

# Package needs to be downloaded to a file with an rpm extension to prevent
# confusion for Ansible DNF module.
- name: Download Hyper for Fedora and Suse
  ansible.builtin.get_url:
    dest: /tmp/hyper.rpm
    mode: "600"
    url: >-
      https://releases.hyper.is/download/rpm{{ '_arm64' if system_architecture
      == 'arm64' else '' }}
  when: ansible_pkg_mgr in ["dnf", "zypper"] and system_architecture == "amd64"

# Hyper Arm64 DNF package is broken.
- name: Install Hyper for Fedora
  ansible.builtin.dnf:
    disable_gpg_check: true
    name: /tmp/hyper.rpm
  become: true
  when: ansible_pkg_mgr == "dnf" and system_architecture == "amd64"

- name: Install Hyper for MacOS
  community.general.homebrew_cask:
    accept_external_apps: true
    name: hyper
    state: present
  when: ansible_system == "Darwin"

- name: Install Hyper for Suse
  become: true
  community.general.zypper:
    name: /tmp/hyper.rpm
  when: ansible_pkg_mgr == "zypper" and system_architecture == "amd64"

- name: Install Hyper for Windows
  community.windows.win_scoop:
    name: hyper
  when: ansible_system == "Win32NT"

# Hyper terminal lists ~/.hyper.js as deprecated path for its configuration
# file, but seems to be the only path it will use for Unix.
- name: Copy Hyper configuration file to backup location
  ansible.builtin.template:
    dest: "{{ user_home }}/.hyper.js"
    force: true
    mode: "644"
    owner: "{{ user_id }}"
    src: hyper.j2
  become: true
  when: ansible_system != "Win32NT"

- name: Create Hyper configuration directory for Linux
  ansible.builtin.file:
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.config/Hyper/"
    state: directory
  become: true
  when: ansible_system == "Linux"

- name: Create Hyper configuration directory for MacOS
  ansible.builtin.file:
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/Library/Application Support/Hyper/"
    state: directory
  become: true
  when: ansible_system == "Darwin"

- name: Create Hyper configuration directory for Windows
  ansible.windows.win_file:
    path: "{{ user_home }}/AppData/Roaming/Hyper/"
    state: directory
  when: ansible_system == "Win32NT"

- name: Copy Hyper configuration file for Linux
  ansible.builtin.template:
    dest: "{{ user_home }}/.config/Hyper/.hyper.js"
    force: true
    mode: "644"
    owner: "{{ user_id }}"
    src: hyper.j2
  become: true
  when: ansible_system == "Linux"

- name: Copy Hyper configuration file for MacOS
  ansible.builtin.template:
    dest: "{{ user_home }}/Library/Application Support/Hyper/.hyper.js"
    force: true
    mode: "644"
    owner: "{{ user_id }}"
    src: hyper.j2
  become: true
  when: ansible_system == "Darwin"

- name: Copy Hyper configuration file for Windows
  ansible.windows.win_template:
    dest: "{{ user_home }}/AppData/Roaming/Hyper/.hyper.js"
    force: true
    src: hyper.j2
  when: ansible_system == "Win32NT"

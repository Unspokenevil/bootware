---
- name: Download Bun for Unix
  ansible.builtin.unarchive:
    dest: /tmp
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/oven-sh/bun/releases/latest/download/bun-{{
      ansible_system | lower }}-{{ bun_arch }}.zip
  when: ansible_system in ["Darwin", "Linux"] and system_libc != "musl"

- name: Create Bun binaries directory for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.bun/bin"
    state: directory
  become: true
  when: ansible_system in ["Darwin", "Linux"] and system_libc != "musl"

- name: Install Bun for Unix
  ansible.builtin.copy:
    group: "{{ group_id }}"
    dest: "{{ user_home }}/.bun/bin/bun"
    force: true
    mode: "755"
    owner: "{{ user_id }}"
    remote_src: true
    src: /tmp/bun-{{ ansible_system | lower }}-{{ bun_arch }}/bun
  become: true
  when: ansible_system in ["Darwin", "Linux"] and system_libc != "musl"

- name: Install Bun for Windows
  community.windows.win_scoop:
    name: bun
  when: ansible_system == "Win32NT"

- name: Create user shell completion directories for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/{{ item }}"
    state: directory
  become: true
  loop:
    - .local/share/bash-completion/completions
    - .config/fish/completions
  when: ansible_system in ["Darwin", "Linux"] and system_libc != "musl"

- name: Generate user Bun shell completions for Unix
  ansible.builtin.shell: bun completions > {{ user_home }}/{{ item.path }}
  become: true
  become_user: "{{ user_id }}"
  changed_when: true
  environment:
    PATH: "{{ user_home }}/.bun/bin:{{ ansible_env.PATH }}"
    SHELL: "{{ item.shell }}"
  loop:
    - path: .local/share/bash-completion/completions/bun
      shell: bash
    - path: .config/fish/completions/bun.fish
      shell: fish
  when: ansible_system in ["Darwin", "Linux"] and system_libc == "gnu"

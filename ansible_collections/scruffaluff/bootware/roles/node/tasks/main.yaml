---
- name: Install Node for FreeBSD
  become: true
  community.general.pkgng:
    name:
      - node22
      - npm-node22
  when: ansible_system == "FreeBSD"

- name: Install Node for Linux
  ansible.builtin.package:
    name:
      - nodejs
      - "{{ 'nodejs-npm' if ansible_pkg_mgr in ['dnf'] else 'npm' }}"
  become: true
  when: ansible_system == "Linux"

- name: Install Node for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: node
  when: ansible_system == "Darwin"

- name: Install Node for OpenWrt
  become: true
  community.general.opkg:
    name:
      - node
      - node-npm
  when: ansible_pkg_mgr == "opkg"

- name: Install Node for Windows
  community.windows.win_scoop:
    global: "{{ scoop_global }}"
    name: nodejs
  when: ansible_system == "Win32NT"

- name: Configure NPM for Unix
  ansible.builtin.shell:
    cmd: |
      mkdir -p {{ user_home }}/.npm-global
      npm config set prefix {{ user_home }}/.npm-global
  become: true
  become_user: "{{ user_id }}"
  # Command does not provide stdout information to determine a change.
  changed_when: true
  when: ansible_system != "Win32NT" and user_id != "root"

- name: Install NPM for Windows
  ansible.windows.win_shell: |
    New-Item -Force -ItemType Directory -Path {{ user_home }}/.npm-global
    npm config set prefix {{ user_home }}/.npm-global
  # Command always marks application as changed.
  changed_when: true
  environment:
    Path: "{{ scoop_apps }}\\nodejs\\current;{{ ansible_env.Path }}"
  loop: "{{ ['pnpm'] + node_applications }}"
  when: ansible_system == "Win32NT"

- name: Install Node applications for Unix
  ansible.builtin.command:
    cmd: npm install --global {{ item }}
  become: true
  become_user: "{{ user_id }}"
  # Command always marks application as changed.
  changed_when: true
  loop: "{{ ['pnpm'] + node_applications }}"
  when: ansible_system != "Win32NT" and user_id != "root"

- name: Install Node applications for Windows
  ansible.windows.win_command: npm install --global {{ item }}
  # Command always marks application as changed.
  changed_when: true
  environment:
    Path: "{{ scoop_apps }}\\nodejs\\current;{{ ansible_env.Path }}"
  loop: "{{ ['pnpm'] + node_applications }}"
  when: ansible_system == "Win32NT"

- name: Create user shell completion directories for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/{{ item }}"
    state: directory
  become: true
  loop:
    - .local/share/bash-completion/completions
    - .config/fish/completions
  when: ansible_system != "Win32NT" and user_id != "root"

- name: Generate PNPM user shell completions for Unix
  ansible.builtin.shell:
    cmd: pnpm completion {{ item.shell }} > {{ user_home }}/{{ item.path }}
  become: true
  become_user: "{{ user_id }}"
  changed_when: true
  environment:
    PATH: "{{ user_home }}/.npm-global/bin:{{ ansible_env.PATH }}"
  loop:
    - path: .local/share/bash-completion/completions/pnpm
      shell: bash
    - path: .config/fish/completions/pnpm.fish
      shell: fish
  when: ansible_system != "Win32NT" and user_id != "root"

- name: Mark role as executed to prevent reruns
  ansible.builtin.set_fact:
    cacheable: true
    node_role_executed: true

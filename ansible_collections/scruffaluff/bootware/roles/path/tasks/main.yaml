---
- name: Create system binaries directory for Unix
  ansible.builtin.file:
    dest: /usr/local/bin
    mode: "755"
    state: directory
  become: true
  tags:
    - install
  when: ansible_system != "Win32NT"

- name: Create user binaries directory for Unix
  ansible.builtin.file:
    dest: "{{ user_home }}/.local/bin"
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    state: directory
  become: true
  tags:
    - install
  when: ansible_system != "Win32NT"

- name: Create binaries directories for Windows
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  loop:
    - "C:\\Program Files\\Bin"
    - "{{ user_home }}\\.local\\bin"
    - "{{ user_home }}\\AppData\\Local\\Programs\\Bin"
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Set owner of user binaries directories for Windows
  ansible.windows.win_owner:
    path: "{{ item }}"
    recurse: true
    user: "{{ user_id }}"
  loop:
    - "{{ user_home }}\\.local\\bin"
    - "{{ user_home }}\\AppData\\Local\\Programs\\Bin"
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Add binaries directories to path for Windows
  ansible.windows.win_path:
    elements: "{{ item.elements }}"
    scope: "{{ item.scope }}"
  loop:
    - elements: C:\Program Files\Bin
      scope: machine
    - elements: "{{ user_home }}\\.local\\bin"
      scope: user
    - elements: "{{ user_home }}\\AppData\\local\\Programs\\Bin"
      scope: user
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Create user configuration directory for Unix
  ansible.builtin.file:
    dest: "{{ user_home }}/.config"
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    state: directory
  become: true
  tags:
    - install
  when: ansible_system != "Win32NT"

- name: Create user configuration directory for Windows
  ansible.windows.win_file:
    path: "{{ user_home }}\\.config"
    state: directory
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Set owner of user configuration directory for Windows
  ansible.windows.win_owner:
    path: "{{ user_home }}\\.config"
    recurse: true
    user: "{{ user_id }}"
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Create system shell completion directories for Unix
  ansible.builtin.file:
    mode: "755"
    path: "{{ item }}"
    state: directory
  become: true
  loop:
    - "{{ bash_completion }}"
    - "{{ fish_completion }}"
    - "{{ nushell_vendor_autoload }}"
  tags:
    - completion
    - install
  when: ansible_system != "Win32NT"

- name: Create user shell completion directories for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ item }}"
    state: directory
  become: true
  loop:
    - "{{ bash_user_completion }}"
    - "{{ fish_user_completion }}"
    - "{{ nushell_user_vendor_autoload }}"
  tags:
    - completion
    - install
  when: ansible_system != "Win32NT" and user_id != "root"

- name: Create shell completion directories for Windows
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  loop: >-
    {{ [nushell_vendor_autoload, nushell_user_vendor_autoload] +
    powershell_module_paths + powershell_user_module_paths }}
  tags:
    - completion
    - install
  when: ansible_system == "Win32NT"

- name: Set owner of user shell completion directories for Windows
  ansible.windows.win_owner:
    path: "{{ item }}"
    recurse: true
    user: "{{ user_id }}"
  loop: "{{ [nushell_user_vendor_autoload] + powershell_user_module_paths }}"
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Mark role as executed to prevent reruns
  ansible.builtin.set_fact:
    cacheable: true
    path_role_executed: true

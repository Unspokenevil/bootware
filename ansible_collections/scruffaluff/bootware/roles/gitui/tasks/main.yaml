---
- name: Install GitUI for Alpine
  become: true
  community.general.apk:
    name: gitui
    repository: http://dl-cdn.alpinelinux.org/alpine/edge/community
    state: latest
    update_cache: true
  tags:
    - install
  when: ansible_pkg_mgr == "apk"

- name: Install GitUI for FreeBSD
  become: true
  community.general.pkgng:
    name: gitui
  tags:
    - install
  when: ansible_system == "FreeBSD"

# TODO: Renable when GitUI package in most distributions reaches version 0.25.0.
# - name: Install GitUI for Linux
#   ansible.builtin.package:
#     name: gitui
#   become: true
#   ignore_errors: true
#   register: gitui_linux
#   tags:
#     - install
#   when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Get latest GitUI version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/gitui.json
  register: gitui_formula
  tags:
    - install
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Create GitUI temporary directory for Linux
  ansible.builtin.tempfile:
    state: directory
  register: gitui_temp
  tags:
    - install
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Download GitUI for Linux
  ansible.builtin.unarchive:
    dest: "{{ gitui_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/extrawurst/gitui/releases/download/v{{
      gitui_formula.json.versions.stable }}/gitui-linux-{{
      gitui_arch[system_architecture] }}.tar.gz
  tags:
    - install
  vars:
    gitui_arch:
      amd64: x86_64
      arm64: aarch64
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Install GitUI for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/gitui
    force: true
    mode: "755"
    remote_src: true
    src: "{{ gitui_temp.path }}/gitui"
  become: true
  tags:
    - install
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Install GitUI for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: gitui
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install GitUI for Windows
  community.windows.win_scoop:
    global: true
    name: gitui
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Create GitUI configuration directory for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.config/gitui"
    state: directory
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Copy GitUI configuration files for Unix
  ansible.builtin.copy:
    dest: "{{ user_home }}/.config/gitui/key_bindings.ron"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: key_bindings.ron
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Create GitUI configuration directory for Windows
  ansible.windows.win_file:
    path: "{{ user_home }}\\AppData\\Roaming\\gitui"
    state: directory
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Copy GitUI configuration files for Windows
  ansible.windows.win_copy:
    dest: "{{ user_home }}\\AppData\\Roaming\\gitui\\key_bindings.ron"
    force: true
    src: key_bindings.ron
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Set owner of GitUI files for Windows
  ansible.windows.win_owner:
    path: "{{ user_home }}\\AppData\\Roaming\\gitui"
    recurse: true
    user: "{{ user_id }}"
  tags:
    - config
  when: ansible_system == "Win32NT"

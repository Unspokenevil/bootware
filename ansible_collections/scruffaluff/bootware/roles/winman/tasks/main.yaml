---
- name: Check if Pop Shell is installed for GNOME desktops
  ansible.builtin.command: gnome-extensions show pop-shell@system76.com
  become: true
  become_user: "{{ user_id }}"
  changed_when: false
  ignore_errors: true
  register: winman_pop_shell_check
  when: ansible_system == "Linux" and gnome_desktop

# Pop Shell requires TypeScript as a build dependency
- name: Install Typescript for GNOME desktops
  ansible.builtin.command: npm install --global typescript
  become: true
  become_user: "{{ user_id }}"
  # Command always marks application as changed.
  changed_when: true
  environment:
    PATH: "{{ user_home }}/.npm-global/bin:{{ ansible_env.PATH }}"
  when: winman_pop_shell_check is failed and gnome_desktop

- name: Install Pop Shell for GNOME desktops
  ansible.builtin.shell:
    cmd: |
      source {{ user_home }}/.bashrc
      tmp_dir="${HOME}$(mktemp --dry-run)"
      git clone --depth 1 https://github.com/pop-os/shell.git "${tmp_dir}"
      echo y | make --directory "${tmp_dir}" local-install
      rm --force --recursive "${tmp_dir}"
    executable: "{{ bash_executable }}"
  become: true
  become_user: "{{ user_id }}"
  changed_when: true
  when: winman_pop_shell_check is failed and gnome_desktop

- name: Enable Pop Shell extension for GNOME desktops
  ansible.builtin.command: gnome-extensions enable pop-shell@system76.com
  become: true
  become_user: "{{ user_id }}"
  # Command does not provide stdout information to determine a change.
  changed_when: true
  when: ansible_system== "Linux" and gnome_desktop

- name: Notify user to reset keyboard shortcuts for GNOME desktops
  ansible.builtin.debug:
    msg:
      - Pop Shell may have overriden the system's keyboard shortcuts. To reset
      - the shortcuts, go to 'Settings.Keyboard.View and Customize Shortcuts'
      - and click the 'Reset All' button.
  when: winman_pop_shell_check is failed and gnome_desktop

- name: Change Pop Shell settings for GNOME desktops
  ansible.builtin.script: pop_shell.sh
  become: true
  become_user: "{{ user_id }}"
  when: ansible_system == "Linux" and gnome_desktop

- name: Install Amethyst for MacOS
  community.general.homebrew_cask:
    accept_external_apps: true
    name: amethyst
    state: present
  when: ansible_system == "Darwin"

- name: Install GlazeWM for Windows
  community.windows.win_scoop:
    name: glazewm
  when: ansible_system == "Win32NT"

- name: Create Amethyst configuration directory for MacOS
  ansible.builtin.file:
    dest: "{{ user_home }}/.config/amethyst"
    mode: "750"
    owner: "{{ user_id }}"
    state: directory
  when: ansible_system == "Darwin"

- name: Copy Amethyst configuration file for MacOS
  ansible.builtin.copy:
    dest: "{{ user_home }}/.config/amethyst/amethyst.yml"
    force: true
    mode: "640"
    owner: "{{ user_id }}"
    src: amethyst.yaml
  when: ansible_system == "Darwin"

- name: Create GlazeWM configuration directory for Windows
  ansible.windows.win_file:
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.glaze-wm"
    state: directory
  when: ansible_system == "Win32NT"

- name: Copy GlazeWM configuration file for Windows
  ansible.windows.win_copy:
    dest: "{{ user_home }}/.glaze-wm/config.yaml"
    force: true
    owner: "{{ user_id }}"
    src: glaze_wm.yaml
  when: ansible_system == "Win32NT"

- name: Add GlazeWM to startup applications for Windows
  community.windows.win_shortcut:
    dest: >-
      {{ user_home }}\\AppData\\Roaming\\Microsoft\\Windows\\Start
      Menu\\Programs\\Startup\\GlazeWM.lnk
    icon: "{{ scoop_apps }}\\glazewm\\current\\GlazeWM.exe,0"
    src: "{{ scoop_apps }}\\glazewm\\current\\GlazeWM.exe"
  when: ansible_system == "Win32NT"

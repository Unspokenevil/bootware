---
- name: Create Flyctl temporary directory for Unix
  ansible.builtin.tempfile:
    state: directory
  register: flyctl_temp
  tags:
    - install
  when: ansible_system in ["Darwin", "Linux"]

- name: Get latest Flyctl version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/flyctl.json
  register: flyctl_formula
  tags:
    - install
  when: ansible_system == "Linux"

- name: Download Flyctl for Linux
  ansible.builtin.unarchive:
    dest: "{{ flyctl_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/superfly/flyctl/releases/download/v{{
      flyctl_formula.json.versions.stable }}/flyctl_{{
      flyctl_formula.json.versions.stable }}_Linux_{{
      flyctl_arch[system_architecture] }}.tar.gz
  tags:
    - install
  vars:
    flyctl_arch:
      amd64: x86_64
      arm64: arm64
  when: ansible_system == "Linux"

- name: Install Flyctl for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/flyctl
    force: true
    mode: "755"
    remote_src: true
    src: "{{ flyctl_temp.path }}/flyctl"
  become: true
  tags:
    - install
  when: ansible_system == "Linux"

- name: Install Flyctl for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: flyctl
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install Flyctl for Windows
  community.windows.win_scoop:
    global: true
    name: flyctl
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Create Flyctl shell completions for Unix
  ansible.builtin.shell:
    cmd: flyctl completion {{ item }} > {{ flyctl_temp.path }}/flyctl.{{ item }}
  become: true
  changed_when: true
  environment:
    PATH: /opt/homebrew/bin:/usr/local/bin:{{ ansible_env.PATH }}
  loop:
    - bash
    - fish
  tags:
    - completion
    - install
  when: ansible_system in ["Darwin", "Linux"]

- name: Install Flyctl shell completions for Unix
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    force: true
    mode: "644"
    remote_src: true
    src: "{{ flyctl_temp.path }}/flyctl.{{ item.shell }}"
  become: true
  loop:
    - dest: "{{ bash_completion }}/flyctl"
      shell: bash
    - dest: "{{ fish_completion }}/flyctl.fish"
      shell: fish
  tags:
    - completion
    - install
  when: ansible_system in ["Darwin", "Linux"]

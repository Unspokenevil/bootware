---
- name: Install Uv for FreeBSD
  become: true
  community.general.pkgng:
    name: uv
  tags:
    - install
  when: ansible_system == "FreeBSD"

- name: Get latest Uv version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/uv.json
  register: uv_formula
  tags:
    - install
  when: ansible_system == "Linux"

- name: Download Uv for Linux
  ansible.builtin.unarchive:
    dest: /tmp
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/astral-sh/uv/releases/download/{{
      uv_formula.json.versions.stable }}/uv-{{ uv_arch }}-unknown-linux-{{
      system_libc }}.tar.gz
  tags:
    - install
  when: ansible_system == "Linux"

- name: Install Uv for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/uv
    force: true
    mode: "755"
    remote_src: true
    src: /tmp/uv-{{ uv_arch }}-unknown-linux-{{ system_libc }}/uv
  become: true
  tags:
    - install
  when: ansible_system == "Linux"

- name: Install Uv for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: uv
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install Uv for Windows
  community.windows.win_scoop:
    global: "{{ scoop_global }}"
    name: uv
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Generate Uv shell completions for Unix
  ansible.builtin.shell:
    cmd: uv --generate-shell-completion {{ item.shell }} > '{{ item.path }}'
  become: true
  changed_when: true
  environment:
    PATH: "/opt/homebrew/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  loop:
    - path: "{{ bash_completion }}/uv"
      shell: bash
    - path: "{{ fish_completion }}/uv.fish"
      shell: fish
    - path: "{{ nushell_vendor_autoload }}/uv.nu"
      shell: nushell
  tags:
    - install
  when: ansible_system != "Win32NT"

- name: Generate Uv user shell completions for Windows
  # Using "WriteAllLines" to avoid the Byte Order Mark (BOM) that PowerShell 5
  # prepends to outputs redirected to files.
  ansible.windows.win_shell: |
    $Text = uv --generate-shell-completion {{ item.shell }}
    [System.IO.File]::WriteAllLines("{{ item.path }}", $Text)
  changed_when: true
  environment:
    Path: "{{ scoop_apps }}\\uv\\current;{{ ansible_env.Path }}"
  loop:
    - path: "{{ nushell_vendor_autoload }}/uv.nu"
      shell: nushell
    - path: "{{ powershell_modules }}/UvCompletion.psm1"
      shell: powershell
  tags:
    - install
  when: ansible_system == "Win32NT"

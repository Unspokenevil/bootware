- name: Get latest FD version
  uri:
    url: https://formulae.brew.sh/api/formula/fd.json
    method: GET
    return_content: yes
  register: fd_formula
  when: ansible_system == "Linux"

- name: Install FD for FreeBSD
  become: yes
  community.general.pkgng:
    name: fd-find
  when: ansible_system == "FreeBSD"

- name: Download FD for Linux
  become: yes
  unarchive:
    dest: /tmp/
    mode: 0755
    remote_src: yes
    src: >-
      https://github.com/sharkdp/fd/releases/download/v{{
      fd_formula.json.versions.stable }}/fd-v{{ fd_formula.json.versions.stable
      }}-{{ fd_arch[ansible_architecture] }}-unknown-linux-{{
      fd_abi[ansible_architecture] }}.tar.gz
  vars:
    fd_abi:
      aarch64: gnueabihf
      x86_64: gnu
    fd_arch:
      aarch64: arm
      x86_64: x86_64
  when: ansible_system == "Linux"

- name: Install FD for Linux
  become: yes
  copy:
    dest: /usr/local/bin/fd
    mode: 0755
    src: >-
      /tmp/fd-v{{ fd_formula.json.versions.stable }}-{{
      fd_arch[ansible_architecture] }}-unknown-linux-{{
      fd_abi[ansible_architecture] }}/fd
  vars:
    fd_abi:
      aarch64: gnueabihf
      x86_64: gnu
    fd_arch:
      aarch64: arm
      x86_64: x86_64
  when: ansible_system == "Linux"

- name: Install FD for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew:
    name: fd
  when: ansible_system == "Darwin"

- name: Install FD for Windows
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name: fd
  when: ansible_system == "Win32NT"

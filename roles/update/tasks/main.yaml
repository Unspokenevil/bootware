- name: Update packages for Arch distributions
  become: yes
  pacman:
    update_cache: yes
    upgrade: yes
  when: ansible_pkg_mgr == "pacman"

# TODO: Update packages for RedHat and Windows.
- name: Update packages for Debian distributions
  apt:
    autoremove: yes
    update_cache: yes
    upgrade: full
  become: yes
  when: ansible_pkg_mgr == "apt"

- name: Update packages for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew:
    update_homebrew: yes
    # TODO: Resolve brew link error for upgrade_all.
    # upgrade_all: yes
  when: ansible_system == "Darwin"

- name: Install essential packages for Linux
  become: yes
  package:
    name:
      - ca-certificates
      - flatpak
      - glances
      - gnupg
      - htop
      - iftop
      - iotop
      - neofetch
      - openssl
      - pass
      - sudo
      - tar
      - tmate
      - tmux
      - unzip
      - zip
  when: ansible_system == "Linux"

- name: Install essential packages for Arch distributions
  become: yes
  pacman:
    name:
      - openssh
      - pkgconf
      - shellcheck
      - which
  when: ansible_pkg_mgr == "pacman"

- name: Install essential packages for Debian distributions
  apt:
    name:
      - apt-file
      - apt-transport-https
      - gnupg2
      - openssh-client
      - openssh-server
      - pbuilder
      - shellcheck
      - ubuntu-dev-tools
  become: yes
  when: ansible_pkg_mgr == "apt"

- name: Install essential packages for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew:
    name:
      - openssh
      - shellcheck
      - tmate
      - tmux
      - unzip
      - zip
  when: ansible_system == "Darwin"

- name: Install essential packages for Red Hat distributions
  become: yes
  dnf:
    name:
      - ShellCheck
  when: ansible_pkg_mgr == "dnf"

- name: Install essential packages for Windows
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name:
      - 7zip
      - openssh
      - openssl
      - unzip
      - zip
  when: ansible_system == "Windows"

- name: Add Flathub remote repository for Linux
  become: yes
  shell:
    cmd: >-
      flatpak remote-add --if-not-exists flathub
      https://flathub.org/repo/flathub.flatpakrepo
  when: ansible_system == "Linux"

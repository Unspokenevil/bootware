---
- name: Get latest Go version
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/go.json
  register: go_formula
  when: ansible_system == "Linux"

- name: Install Go for Alpine
  become: true
  community.general.apk:
    name: go
  when: ansible_pkg_mgr == "apk"

- name: Install Go for FreeBSD
  become: true
  community.general.pkgng:
    name: go
  when: ansible_system == "FreeBSD"

- name: Install Go for Linux
  ansible.builtin.unarchive:
    creates: /usr/local/go
    dest: /usr/local/
    mode: "755"
    owner: root
    remote_src: true
    src: >-
      https://golang.org/dl/go{{ go_formula.json.versions.stable }}.linux-{{
      system_architecture }}.tar.gz
  become: true
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Install Go for MacOS
  community.general.homebrew:
    name: go
    state: present
  when: ansible_system == "Darwin"

- name: Install Go for Windows
  community.windows.win_scoop:
    name: go
  when: ansible_system == "Win32NT"

- name: Install Go command line applications for Unix
  ansible.builtin.command: "go install {{ item }}"
  environment:
    GOPATH: "{{ go_path }}"
    PATH: "{{ go_root }}/bin:{{ go_path }}/bin:{{ ansible_env.PATH }}"
  loop: "{{ go_applications }}"
  when: ansible_system != "Win32NT"

# Scoop installer automatically sets $HOME/go as GOTPATH and does not allow a
# custom path.
- name: Install Go command line applications for Windows
  ansible.windows.win_shell: go install {{ item }}
  environment:
    GOPATH: "{{ ansible_env.HOME }}\\go"
    Path: "{{ scoop_apps }}\\go\\current\\bin;{{ ansible_env.Path }}"
  loop: "{{ go_applications }}"
  when: ansible_system == "Win32NT"

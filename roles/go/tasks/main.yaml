- name: Get latest Go version
  uri:
    url: https://formulae.brew.sh/api/formula/go.json
    method: GET
    return_content: yes
  register: go_formula
  when: ansible_system == "Linux"

- name: Install Go for FreeBSD
  become: yes
  community.general.pkgng:
    name: go
  when: ansible_system == "FreeBSD"

- name: Install Go for Linux
  become: yes
  unarchive:
    creates: /usr/local/go
    dest: /usr/local/
    mode: "755"
    remote_src: yes
    src: >-
      https://golang.org/dl/go{{ go_formula.json.versions.stable }}.linux-{{
      go_arch[ansible_architecture] }}.tar.gz
  vars:
    go_arch:
      aarch64: arm64
      x86_64: amd64
  when: ansible_system == "Linux"

- name: Install Go for MacOS
  become: yes
  become_user: "{{ user_account }}"
  community.general.homebrew:
    name: go
    state: present
  when: ansible_system == "Darwin"

- name: Install Go for Windows
  become: yes
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name: go
  when: ansible_system == "Win32NT"

- name: Install Go command line applications for Unix
  become: yes
  become_user: "{{ user_account }}"
  loop: "{{ go_applications }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      go get {{ item }}
    executable: "{{ bash_executable }}"
  when: ansible_system != "Win32NT"

- name: Install Go command line applications for Windows
  become: yes
  become_user: "{{ user_account }}"
  loop: "{{ go_applications }}"
  when: ansible_system == "Win32NT"
  win_shell: go get {{ item }}

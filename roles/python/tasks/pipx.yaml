- name: Install Pipx for Linux
  become: yes
  shell:
    cmd: /usr/bin/python3 -m pip install --upgrade pipx
  when: ansible_system == "Linux"

- name: Install Pipx for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew:
    name: pipx
  when: ansible_system == "Darwin"

- name: Install Pipx for Windows
  become_user: "{{ user_account }}"
  win_shell: python -m pip install --upgrade pipx
  when: ansible_system == "Win32NT"

# Pipx installs applications per user, so user_account is required.
- name: Install Pipx command line applications for Unix
  become_user: "{{ user_account }}"
  loop: "{{ pipx_applications }}"
  shell:
    # Pipx installation can break if associated Python interpreter is updated.
    # If so a new installation should overwrite the current.
    cmd: |
      source {{ user_home_dir }}/.bashrc
      pipx install {{ item }} || pipx upgrade {{ item }} || pipx install --force {{ item }}
    executable: /bin/bash
  when: ansible_system != "Win32NT"

# Pipx installs applications per user, so user_account is required.
- name: Install Pipx command line applications for Windows
  become_user: "{{ user_account }}"
  loop: "{{ pipx_applications }}"
  # Pipx installation can break if associated Python interpreter is updated.
  # If so a new installation should overwrite the current.
  win_shell: |
    (pipx install {{ item }}) -Or (pipx upgrade {{ item }}) -Or (pipx install --force {{ item }})
  when: ansible_system == "Win32NT"

- name: Update Pipx command line applications for Unix
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      pipx upgrade-all
    executable: /bin/bash
  when: ansible_system != "Win32NT"

- name: Update Pipx command line applications for Windows
  become_user: "{{ user_account }}"
  win_shell: pipx upgrade-all
  when: ansible_system == "Win32NT"

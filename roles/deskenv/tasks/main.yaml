- name: Create background pictures directory
  become_user: "{{ user_account }}"
  file:
    path: "{{ user_home_dir }}/Pictures/background"
    state: directory

- name: Download desktop background picture
  become_user: "{{ user_account }}"
  get_url:
    dest: "{{ user_home_dir }}/Pictures/background/{{ background.name }}"
    mode: 0644
    url: "{{ background.url }}"

- name: Install Caffeine shell extension for GNOME desktop Debian distributions
  apt:
    name: gnome-shell-extension-caffeine
  become: yes
  when: ansible_pkg_mgr == "apt" and linux_desktop in ["gnome", "pop", "ubuntu"]

- name: Install Caffeine shell extension for GNOME desktop Fedora distributions
  become: yes
  dnf:
    name: gnome-shell-extension-caffeine
  when: ansible_pkg_mgr == "dnf" and linux_desktop in ["gnome"]

- name: Enable Caffeine shell extension for GNOME desktops
  become_user: "{{ user_account }}"
  shell:
    cmd: gnome-extensions enable caffeine@patapon.info
  when: >-
    ansible_system == "Linux" and linux_desktop in ["gnome", "pop", "ubuntu"]

- name: Change desktop settings for GNOME
  become_user: "{{ user_account }}"
  script: "gnome.sh {{ user_account }} {{ background.name }}"
  when: >-
    ansible_system == "Linux" and linux_desktop in ["gnome", "pop", "ubuntu"]

# Linux distributions with GNOME desktops should be configured after general
# GNOME settings in order to use overrides.
- name: Change desktop settings for Fedora
  become_user: "{{ user_account }}"
  script: fedora.sh
  when: ansible_pkg_mgr == "dnf" and linux_desktop in ["gnome"]

- name: Change desktop settings for PopOS
  become_user: "{{ user_account }}"
  script: popos.sh
  when: ansible_system == "Linux" and linux_desktop == "pop"

- name: Change desktop settings for Ubuntu
  become_user: "{{ user_account }}"
  script: ubuntu.sh
  when: ansible_system == "Linux" and linux_desktop == "ubuntu"

- name: Change desktop settings for MacOS
  become_user: "{{ user_account }}"
  script: macos.sh
  when: ansible_system == "Darwin"

- name: Change desktop settings for Windows
  become_user: "{{ user_account }}"
  script: windows.sh
  when: ansible_system == "Windows"

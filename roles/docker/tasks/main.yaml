- name: Get latest Docker Compose version
  uri:
    url: https://formulae.brew.sh/api/formula/docker-compose.json
    method: GET
    return_content: yes
  register: docker_compose_formula
  when: ansible_system == "Linux"

- name: Install Docker for Arch distributions
  become: yes
  community.general.pacman:
    name: docker
  when: ansible_pkg_mgr == "pacman"

- name: Install repository dependencies for Debian distributions
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
  become: yes
  when: ansible_pkg_mgr == "apt"

- name: Add Docker key for Debian distributions
  become: yes
  shell:
    cmd: |
      curl -fsSL https://download.docker.com/linux/{{ deb_distro_base }}/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    creates: /usr/share/keyrings/docker-archive-keyring.gpg
    warn: no
  when: ansible_pkg_mgr == "apt"

- name: Add Docker package information for Debian distributions
  become: yes
  lineinfile:
    create: yes
    # Check of line in file is dependent on whitespace such as newlines.
    # prettier-ignore
    line: deb [arch={{ docker_arch[ansible_architecture] }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ deb_distro_base }} {{ ansible_distribution_release|lower }} stable
    mode: "644"
    path: /etc/apt/sources.list.d/docker.list
  vars:
    docker_arch:
      aarch64: arm64
      x86_64: amd64
  when: ansible_pkg_mgr == "apt"

- name: Install Docker for Debian distributions
  apt:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
    update_cache: yes
  become: yes
  when: ansible_pkg_mgr == "apt"

- name: Add Docker repository for Fedora distributions
  become: yes
  shell:
    cmd: >-
      dnf config-manager --add-repo
      https://download.docker.com/linux/fedora/docker-ce.repo
    # Ansible dnf module does not have a command to add repositories.
    warn: no
  when: ansible_pkg_mgr == "dnf"

# Command sudo systemctl start docker may need to be executed afterwards.
- name: Install Docker for Fedora distributions
  become: yes
  dnf:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
  when: ansible_pkg_mgr == "dnf"

- name: Install Docker for FreeBSD
  become: yes
  community.general.pkgng:
    name: docker
  when: ansible_system == "FreeBSD"

- name: Install Docker for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew_cask:
    accept_external_apps: yes
    name: docker
    state: present
  when: ansible_system == "Darwin"

- name: Install Docker for Windows
  when: ansible_system == "Win32NT"
  win_chocolatey:
    name: docker-desktop

- name: Check if systemd is available for Linux
  register: systemd_available
  stat:
    path: /usr/bin/systemctl
  when: ansible_system == "Linux"

- name: Start Containerd on system boot for Linux
  become: yes
  systemd:
    enabled: yes
    name: containerd
  when: ansible_system == "Linux" and systemd_available.stat.exists

- name: Start Docker on system boot for Linux
  become: yes
  systemd:
    enabled: yes
    name: docker
  when: ansible_system == "Linux" and systemd_available.stat.exists

- name: Add user to Docker group for Linux
  become: yes
  user:
    append: yes
    name: "{{ user_account }}"
    groups:
      - docker
  when: ansible_system == "Linux" and systemd_available.stat.exists

- name: Install Docker Compose for FreeBSD
  become: yes
  community.general.pkgng:
    name: docker-compose
  when: ansible_system == "FreeBSD"

- name: Install Docker Compose for Linux
  become: yes
  package:
    name: docker-compose
  when: ansible_system == "Linux"

- name: Create Docker Compose plugin directory for Linux
  become: yes
  file:
    mode: "755"
    path: /usr/lib/docker/cli-plugins
    state: directory
  when: ansible_system == "Linux"

- name: Install Docker Compose plugin for Linux
  become: yes
  get_url:
    dest: /usr/lib/docker/cli-plugins/docker-compose
    mode: "755"
    url: >-
      https://github.com/docker/compose/releases/download/v{{
      docker_compose_formula.json.versions.stable }}/docker-compose-linux-{{
      ansible_architecture }}
  when: ansible_system == "Linux"

- name: Install Docker Compose for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew:
    name: docker-compose
    state: present
  when: ansible_system == "Darwin"

- name: Install Docker Compose for Windows
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name:
      - docker-compose
      - posh-docker
  when: ansible_system == "Win32NT"

- name: Create Fish completions directory for Unix
  become: yes
  file:
    mode: "755"
    path: /etc/fish/completions
    state: directory
  when: ansible_system != "Win32NT"

- name: Install Docker Fish shell completions for Unix
  become: yes
  get_url:
    dest: /etc/fish/completions/docker.fish
    mode: "664"
    url: https://raw.githubusercontent.com/docker/cli/master/contrib/completion/fish/docker.fish
  when: ansible_system != "Win32NT"

- name: Install Docker Compose Fish shell completions for Unix
  become: yes
  get_url:
    dest: /etc/fish/completions/docker-compose.fish
    mode: "664"
    url: https://raw.githubusercontent.com/docker/compose/master/contrib/completion/fish/docker-compose.fish
  when: ansible_system != "Win32NT"

# Arch package repository provides the open source version of Visual Studio
# Code, which cannot install proprietary Microsoft extensions. For more
# information, see
# https://wiki.archlinux.org/index.php/Visual_Studio_Code#No_extensions_found.
- name: Install VSCode for Arch distributions
  become_user: "{{ user_account }}"
  shell:
    cmd: yay -Sy --noconfirm visual-studio-code-bin
  when: ansible_pkg_mgr == "pacman"

- name: Install VSCode for Debian distributions
  apt:
    deb: >-
      https://update.code.visualstudio.com/latest/linux-deb-{{
      vscode_arch[ansible_architecture] }}/stable
  become: yes
  vars:
    vscode_arch:
      aarch64: arm64
      x86_64: x64
  when: ansible_pkg_mgr == "apt" and ansible_distribution != "Pop!_OS"

- name: Add Microsoft GPG key for Fedora distributions
  become: yes
  rpm_key:
    key: https://packages.microsoft.com/keys/microsoft.asc
  when: ansible_pkg_mgr == "dnf"

- name: Install VSCode for Fedora distributions
  become: yes
  dnf:
    name: >-
      https://update.code.visualstudio.com/latest/linux-rpm-{{
      vscode_arch[ansible_architecture] }}/stable
  vars:
    vscode_arch:
      aarch64: arm64
      x86_64: x64
  when: ansible_pkg_mgr == "dnf"

- name: Install VSCode for MacOS
  become_user: "{{ user_account }}"
  community.general.homebrew_cask:
    accept_external_apps: yes
    name: visual-studio-code
    state: present
  when: ansible_system == "Darwin"

- name: Install VSCode for PopOS
  apt:
    name: code
  become: yes
  when: ansible_pkg_mgr == "apt" and ansible_distribution == "Pop!_OS"

- name: Install VSCode for Windows
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name: vscode
  when: ansible_system == "Win32NT"

- name: Create VSCode user directory for Linux
  become_user: "{{ user_account }}"
  file:
    path: "{{ user_home_dir }}/.config/Code/User/"
    state: directory
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Copy VSCode keybindings file for Linux
  become_user: "{{ user_account }}"
  template:
    dest: "{{ user_home_dir }}/.config/Code/User/keybindings.json"
    force: yes
    mode: 0640
    src: keybindings.j2
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Copy VSCode settings file for Linux
  become_user: "{{ user_account }}"
  template:
    dest: "{{ user_home_dir }}/.config/Code/User/settings.json"
    force: yes
    mode: 0640
    src: settings.j2
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Create VSCode user directory for MacOS
  become_user: "{{ user_account }}"
  file:
    path: "{{ user_home_dir }}/Library/Application Support/Code/User/"
    state: directory
  when: ansible_system == "Darwin"

- name: Copy VSCode keybindings file for MacOS
  become_user: "{{ user_account }}"
  template:
    dest: >-
      {{ user_home_dir }}/Library/Application Support/Code/User/keybindings.json
    force: yes
    mode: 0640
    src: keybindings.j2
  when: ansible_system == "Darwin"

- name: Copy VSCode settings file for MacOS
  become_user: "{{ user_account }}"
  template:
    dest: >-
      {{ user_home_dir }}/Library/Application Support/Code/User/settings.json
    force: yes
    mode: 0640
    src: settings.j2
  when: ansible_system == "Darwin"

- name: Create VSCode user directory for Windows
  become_user: "{{ user_account }}"
  win_file:
    path: "{{ user_home_dir }}/AppData/Roaming/Code/User"
    state: directory
  when: ansible_system == "Win32NT"

- name: Copy VSCode keybindings file for Windows
  become_user: "{{ user_account }}"
  template:
    dest: "{{ user_home_dir }}/AppData/Roaming/Code/User/keybindings.json"
    force: yes
    src: keybindings.j2
  when: ansible_system == "Win32NT"

- name: Copy VSCode settings file for Windows
  become_user: "{{ user_account }}"
  template:
    dest: "{{ user_home_dir }}/AppData/Roaming/Code/User/settings.json"
    force: yes
    src: settings.j2
  when: ansible_system == "Win32NT"

- name: Install VSCode extensions for Unix
  become_user: "{{ user_account }}"
  loop: "{{ vscode_extensions }}"
  shell:
    cmd: code --install-extension {{ item }}
  when: ansible_system in ["Darwin", "Linux"] and ansible_pkg_mgr != "apk"

- name: Install VSCode extensions for Windows
  become_user: "{{ user_account }}"
  loop: "{{ vscode_extensions }}"
  win_shell: code --install-extension {{ item }}
  when: ansible_system == "Win32NT"

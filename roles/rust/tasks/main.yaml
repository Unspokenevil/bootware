- name: Install Rust for Unix
  shell:
    cmd:
      curl -Sfs --proto '=https' --tlsv1.2 https://sh.rustup.rs | sh -s -- -y
      --no-modify-path
    creates: "{{ user_home_dir }}/.cargo/bin/rustup"
    warn: false
  when: ansible_system != "Win32NT"

- name: Install Rust for Windows
  community.windows.win_scoop:
    architecture: 64bit
    name: rustup-msvc
  when: ansible_system == "Win32NT"

- name: Update Rust for Unix
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      rustup self update
      rustup update stable
    executable: "{{ bash_executable }}"
  when: ansible_system != "Win32NT"

- name: Update Rust for Windows
  when: ansible_system == "Win32NT"
  win_shell: |
    rustup self update
    rustup update stable

- name: Add Rust components for Unix
  loop: "{{ rustup_components }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      rustup component add {{ item }}
    executable: "{{ bash_executable }}"
  when: ansible_system != "Win32NT"

- name: Add Rust components for Windows
  loop: "{{ rustup_components }}"
  when: ansible_system == "Win32NT"
  win_shell: rustup component add {{ item }}

- name: Add Rust targets for Unix
  loop: "{{ rustup_targets }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      rustup target add {{ item }}
    executable: "{{ bash_executable }}"
  when: ansible_system != "Win32NT"

- name: Add Rust targets for Windows
  loop: "{{ rustup_targets }}"
  when: ansible_system == "Win32NT"
  win_shell: rustup target add {{ item }}

- name: Update or install Cargo packages for Unix
  loop: "{{ cargo_applications }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      cargo install {{ item }}
    executable: "{{ bash_executable }}"
  when: ansible_system != "Win32NT"

- name: Update or install Cargo packages for Windows
  loop: "{{ cargo_applications }}"
  when: ansible_system == "Win32NT"
  win_shell: cargo install {{ item }}

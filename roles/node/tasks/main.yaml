- name: Get latest NVM version
  uri:
    url: https://formulae.brew.sh/api/formula/nvm.json
    method: GET
    return_content: true
  register: nvm_formula
  when: ansible_system not in ["FreeBSD", "Win32NT"]

# NVM is not well-supported for Alpine.
- name: Install Node for Alpine distributions
  community.general.apk:
    name:
      - nodejs
      - npm
  when: ansible_pkg_mgr == "apk"

# NVM does not provide binaries for FreeBSD. Node versions 16 and 17 have
# OpenSSL errors on FreeBSD 13.
- name: Install Node for FreeBSD
  community.general.pkgng:
    name:
      - node16
      - www/npm
  when: ansible_system == "FreeBSD"

- name: Install Node version manager for Unix
  become: true
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      curl -Sfs https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_formula.json.versions.stable }}/install.sh | bash
    warn: false
  when: >-
    ansible_system not in ["FreeBSD", "Win32NT"] and ansible_pkg_mgr != "apk"

- name: Install multiple Node versions for Unix
  become: true
  become_user: "{{ user_account }}"
  loop: "{{ node_versions }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      nvm install {{ item }}
    executable: "{{ bash_executable }}"
  when: >-
    ansible_system not in ["FreeBSD", "Win32NT"] and ansible_pkg_mgr != "apk"

# NVM is not used for Windows due to its frustrating launch checks that require
# administrator permissions.
- name: Install multiple Node versions for Windows
  become: true
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name: nodejs{{ item | replace('16','') }}
  loop: "{{ node_versions }}"
  when: ansible_system == "Win32NT"

- name: Set default Node version for Unix
  become: true
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc 
      nvm alias default {{ node_versions[-1] }}
    executable: "{{ bash_executable }}"
  when: >-
    ansible_system not in ["FreeBSD", "Win32NT"] and ansible_pkg_mgr != "apk"

# NVM cannot find compatible versions of NPM for Alpine.
- name: Update NPM for Unix
  become: true
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      nvm install-latest-npm
    executable: "{{ bash_executable }}"
  when: >-
    ansible_system not in ["FreeBSD", "Win32NT"] and user_account != "root" and
    ansible_pkg_mgr != "apk"

- name: >-
    Install or update Node CLI applications for Alpine distributions and FreeBSD
  become: true
  become_user: "{{ user_account }}"
  loop: "{{ node_applications }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      mkdir -p {{ user_home_dir }}/.npm-global
      npm config set prefix {{ user_home_dir }}/.npm-global
      npm install -g {{ item }}
    executable: "{{ bash_executable }}"
  when: >-
    (ansible_pkg_mgr == "apk" or ansible_system == "FreeBSD") and user_account
    != "root"

- name: Install or update Node CLI applications for Unix
  become: true
  become_user: "{{ user_account }}"
  loop: "{{ node_applications }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      nvm use {{ node_versions[-1] }}
      npm install -g {{ item }}
    executable: "{{ bash_executable }}"
  when: >-
    ansible_system not in ["FreeBSD", "Win32NT"] and user_account != "root" and
    ansible_pkg_mgr != "apk"

- name: Install or update Node CLI applications for Windows
  become: true
  become_user: "{{ user_account }}"
  loop: "{{ node_applications }}"
  when: ansible_system == "Win32NT"
  win_shell: (npm install -g {{ item }}) -Or (npm update -g {{ item }})

- name: Download Fast NVM Fish for Unix
  become: true
  become_user: "{{ user_account }}"
  get_url:
    dest: "{{ user_home_dir }}/.config/fish/functions/nvm.fish"
    mode: "644"
    url: https://raw.githubusercontent.com/brigand/fast-nvm-fish/master/nvm.fish
  when: >-
    ansible_system not in ["FreeBSD", "Win32NT"] and ansible_pkg_mgr != "apk"

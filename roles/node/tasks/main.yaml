- name: Install Node version manager for Unix
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      curl -Sfs https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash
    warn: no
  when: ansible_system in ["Darwin", "Linux"]

- name: Install Node version manager for Windows
  become_user: "{{ user_account }}"
  community.windows.win_scoop:
    architecture: 64bit
    name: nvm
  when: ansible_system == "Win32NT"

- name: Install multiple Node versions for Unix
  become_user: "{{ user_account }}"
  loop: "{{ node_versions }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      nvm install {{ item }}
    executable: /bin/bash
  when: ansible_system in ["Darwin", "Linux"]

- name: Install multiple Node versions for Windows
  become_user: "{{ user_account }}"
  loop: "{{ node_versions }}"
  shell:
    cmd: nvm install {{ item }}
  when: ansible_system == "Win32NT"

- name: Set default Node version for Unix
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc 
      nvm alias default {{ node_versions[-1] }}
    executable: /bin/bash
  when: ansible_system in ["Darwin", "Linux"]

- name: Set default Node version for Windows
  become_user: "{{ user_account }}"
  shell:
    cmd: nvm alias default {{ node_versions[-1] }}
  when: ansible_system == "Win32NT"

- name: Update NPM for Unix
  become_user: "{{ user_account }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      nvm install-latest-npm
    executable: /bin/bash
  when: ansible_system in ["Darwin", "Linux"] and user_account != "root"

- name: Update NPM for Windows
  become_user: "{{ user_account }}"
  shell:
    cmd: nvm install-latest-npm
  when: ansible_system == "Win32NT"

- name: Install or update Node CLI applications for Unix
  become_user: "{{ user_account }}"
  loop: "{{ node_applications }}"
  shell:
    cmd: |
      source {{ user_home_dir }}/.bashrc
      nvm use {{ node_versions[-1] }}
      npm install -g {{ item }}
    executable: /bin/bash
  when: ansible_system in ["Darwin", "Linux"] and user_account != "root"

- name: Install or update Node CLI applications for Windows
  become_user: "{{ user_account }}"
  loop: "{{ node_applications }}"
  shell:
    cmd: |
      nvm use {{ node_versions[-1] }}
      npm install -g {{ item }} || npm update -g {{ item }}
  when: ansible_system == "Win32NT"

- name: Create Fish functions directory for Linux
  become_user: "{{ user_account }}"
  file:
    path: "{{ user_home_dir }}/.config/fish/functions"
    state: directory
  when: ansible_system in ["Darwin", "Linux"]

- name: Download Fast NVM Fish for Linux
  become_user: "{{ user_account }}"
  get_url:
    dest: "{{ user_home_dir }}/.config/fish/functions/nvm.fish"
    mode: 0755
    url: https://raw.githubusercontent.com/brigand/fast-nvm-fish/master/nvm.fish
  when: ansible_system in ["Darwin", "Linux"]
